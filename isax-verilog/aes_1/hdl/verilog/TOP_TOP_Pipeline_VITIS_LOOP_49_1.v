// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module TOP_TOP_Pipeline_VITIS_LOOP_49_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        empty,
        ia_assign,
        ans_0_out,
        ans_0_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] empty;
input  [31:0] ia_assign;
output  [31:0] ans_0_out;
output   ans_0_out_ap_vld;

reg ap_idle;
reg ans_0_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln49_fu_140_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [2:0] j_fu_100;
wire   [2:0] j_4_fu_146_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [31:0] pans_fu_104;
wire   [31:0] pans_2_fu_559_p2;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] ib_fu_159_p8;
wire   [25:0] ib_fu_159_p9;
wire   [0:0] trunc_ln60_fu_179_p1;
wire   [6:0] trunc_ln68_fu_190_p1;
wire   [7:0] a_fu_193_p3;
wire   [0:0] tmp_12_fu_201_p3;
wire   [7:0] a_20_fu_208_p2;
wire   [0:0] tmp_13_fu_222_p3;
wire   [7:0] a_21_fu_214_p3;
wire   [0:0] tmp_14_fu_247_p3;
wire   [7:0] a_34_fu_238_p4;
wire   [6:0] tmp_s_fu_263_p4;
wire   [7:0] a_23_fu_272_p3;
wire   [0:0] tmp_15_fu_280_p3;
wire   [7:0] a_24_fu_287_p2;
wire   [6:0] trunc_ln4_fu_301_p4;
wire   [0:0] icmp_ln65_fu_311_p2;
wire   [7:0] a_25_fu_293_p3;
wire   [0:0] tmp_16_fu_334_p3;
wire   [7:0] a_35_fu_325_p4;
wire   [6:0] tmp_1_fu_350_p4;
wire   [7:0] a_27_fu_359_p3;
wire   [0:0] tmp_17_fu_367_p3;
wire   [7:0] a_28_fu_374_p2;
wire   [6:0] trunc_ln71_3_fu_388_p4;
wire   [0:0] icmp_ln65_2_fu_398_p2;
wire   [7:0] a_29_fu_380_p3;
wire   [0:0] b_fu_421_p3;
wire   [7:0] a_36_fu_412_p4;
wire   [6:0] tmp_2_fu_437_p4;
wire   [7:0] a_31_fu_446_p3;
wire   [0:0] tmp_19_fu_454_p3;
wire   [7:0] a_32_fu_461_p2;
wire   [0:0] tmp_20_fu_475_p3;
wire   [7:0] a_33_fu_467_p3;
wire   [7:0] select_ln65_fu_230_p3;
wire   [7:0] select_ln65_12_fu_483_p3;
wire   [7:0] select_ln65_8_fu_317_p3;
wire   [7:0] p_fu_183_p3;
wire   [7:0] xor_ln74_fu_491_p2;
wire   [7:0] xor_ln74_7_fu_497_p2;
wire   [7:0] p_11_fu_342_p3;
wire   [7:0] p_9_fu_255_p3;
wire   [7:0] select_ln65_10_fu_404_p3;
wire   [7:0] xor_ln74_10_fu_509_p2;
wire   [7:0] xor_ln74_9_fu_515_p2;
wire   [7:0] p_13_fu_429_p3;
wire   [7:0] xor_ln74_11_fu_521_p2;
wire   [7:0] xor_ln74_8_fu_503_p2;
wire   [7:0] oans_fu_527_p2;
wire   [1:0] trunc_ln76_fu_537_p1;
wire   [4:0] shl_ln1_fu_541_p3;
wire   [31:0] zext_ln76_fu_533_p1;
wire   [31:0] zext_ln76_2_fu_549_p1;
wire   [31:0] shl_ln76_fu_553_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [31:0] ib_fu_159_p1;
wire   [31:0] ib_fu_159_p3;
wire   [31:0] ib_fu_159_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
   ap_CS_fsm = 1'd1;
   ap_enable_reg_pp0_iter1 = 1'b0;
   j_fu_100 = 3'd0;
   pans_fu_104 = 32'd0;
   ap_done_reg = 1'b0;
end

TOP_sparsemux_7_32_26_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 32'h3 ),
    .din0_WIDTH( 26 ),
    .CASE1( 32'h1 ),
    .din1_WIDTH( 26 ),
    .CASE2( 32'h2 ),
    .din2_WIDTH( 26 ),
    .def_WIDTH( 26 ),
    .sel_WIDTH( 32 ),
    .dout_WIDTH( 26 ))
sparsemux_7_32_26_1_1_U7(
    .din0(26'd33620227),
    .din1(26'd16974337),
    .din2(26'd50462977),
    .def(26'd16843522),
    .sel(ib_fu_159_p8),
    .dout(ib_fu_159_p9)
);

TOP_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_100 <= 3'd0;
        end else if (((icmp_ln49_fu_140_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_100 <= j_4_fu_146_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pans_fu_104 <= 32'd0;
        end else if (((icmp_ln49_fu_140_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            pans_fu_104 <= pans_2_fu_559_p2;
        end
    end
end

always @ (*) begin
    if (((icmp_ln49_fu_140_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ans_0_out_ap_vld = 1'b1;
    end else begin
        ans_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln49_fu_140_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_20_fu_208_p2 = (8'd27 ^ a_fu_193_p3);

assign a_21_fu_214_p3 = ((tmp_12_fu_201_p3[0:0] == 1'b1) ? a_20_fu_208_p2 : a_fu_193_p3);

assign a_23_fu_272_p3 = {{tmp_s_fu_263_p4}, {1'd0}};

assign a_24_fu_287_p2 = (8'd27 ^ a_23_fu_272_p3);

assign a_25_fu_293_p3 = ((tmp_15_fu_280_p3[0:0] == 1'b1) ? a_24_fu_287_p2 : a_23_fu_272_p3);

assign a_27_fu_359_p3 = {{tmp_1_fu_350_p4}, {1'd0}};

assign a_28_fu_374_p2 = (8'd27 ^ a_27_fu_359_p3);

assign a_29_fu_380_p3 = ((tmp_17_fu_367_p3[0:0] == 1'b1) ? a_28_fu_374_p2 : a_27_fu_359_p3);

assign a_31_fu_446_p3 = {{tmp_2_fu_437_p4}, {1'd0}};

assign a_32_fu_461_p2 = (8'd27 ^ a_31_fu_446_p3);

assign a_33_fu_467_p3 = ((tmp_19_fu_454_p3[0:0] == 1'b1) ? a_32_fu_461_p2 : a_31_fu_446_p3);

assign a_34_fu_238_p4 = {{ia_assign[15:8]}};

assign a_35_fu_325_p4 = {{ia_assign[23:16]}};

assign a_36_fu_412_p4 = {{ia_assign[31:24]}};

assign a_fu_193_p3 = {{trunc_ln68_fu_190_p1}, {1'd0}};

assign ans_0_out = pans_fu_104;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign b_fu_421_p3 = ib_fu_159_p9[32'd24];

assign ib_fu_159_p8 = j_fu_100;

assign icmp_ln49_fu_140_p2 = ((j_fu_100 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln65_2_fu_398_p2 = ((trunc_ln71_3_fu_388_p4 != 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_311_p2 = ((trunc_ln4_fu_301_p4 != 7'd0) ? 1'b1 : 1'b0);

assign j_4_fu_146_p2 = (j_fu_100 + 3'd1);

assign oans_fu_527_p2 = (xor_ln74_8_fu_503_p2 ^ xor_ln74_11_fu_521_p2);

assign p_11_fu_342_p3 = ((tmp_16_fu_334_p3[0:0] == 1'b1) ? a_35_fu_325_p4 : 8'd0);

assign p_13_fu_429_p3 = ((b_fu_421_p3[0:0] == 1'b1) ? a_36_fu_412_p4 : 8'd0);

assign p_9_fu_255_p3 = ((tmp_14_fu_247_p3[0:0] == 1'b1) ? a_34_fu_238_p4 : 8'd0);

assign p_fu_183_p3 = ((trunc_ln60_fu_179_p1[0:0] == 1'b1) ? empty : 8'd0);

assign pans_2_fu_559_p2 = (shl_ln76_fu_553_p2 | pans_fu_104);

assign select_ln65_10_fu_404_p3 = ((icmp_ln65_2_fu_398_p2[0:0] == 1'b1) ? a_29_fu_380_p3 : 8'd0);

assign select_ln65_12_fu_483_p3 = ((tmp_20_fu_475_p3[0:0] == 1'b1) ? a_33_fu_467_p3 : 8'd0);

assign select_ln65_8_fu_317_p3 = ((icmp_ln65_fu_311_p2[0:0] == 1'b1) ? a_25_fu_293_p3 : 8'd0);

assign select_ln65_fu_230_p3 = ((tmp_13_fu_222_p3[0:0] == 1'b1) ? a_21_fu_214_p3 : 8'd0);

assign shl_ln1_fu_541_p3 = {{trunc_ln76_fu_537_p1}, {3'd0}};

assign shl_ln76_fu_553_p2 = zext_ln76_fu_533_p1 << zext_ln76_2_fu_549_p1;

assign tmp_12_fu_201_p3 = empty[32'd7];

assign tmp_13_fu_222_p3 = ib_fu_159_p9[32'd1];

assign tmp_14_fu_247_p3 = ib_fu_159_p9[32'd8];

assign tmp_15_fu_280_p3 = ia_assign[32'd15];

assign tmp_16_fu_334_p3 = ib_fu_159_p9[32'd16];

assign tmp_17_fu_367_p3 = ia_assign[32'd23];

assign tmp_19_fu_454_p3 = ia_assign[32'd31];

assign tmp_1_fu_350_p4 = {{ia_assign[22:16]}};

assign tmp_20_fu_475_p3 = ib_fu_159_p9[32'd25];

assign tmp_2_fu_437_p4 = {{ia_assign[30:24]}};

assign tmp_s_fu_263_p4 = {{ia_assign[14:8]}};

assign trunc_ln4_fu_301_p4 = {{ib_fu_159_p9[15:9]}};

assign trunc_ln60_fu_179_p1 = ib_fu_159_p9[0:0];

assign trunc_ln68_fu_190_p1 = ia_assign[6:0];

assign trunc_ln71_3_fu_388_p4 = {{ib_fu_159_p9[23:17]}};

assign trunc_ln76_fu_537_p1 = j_fu_100[1:0];

assign xor_ln74_10_fu_509_p2 = (p_9_fu_255_p3 ^ p_11_fu_342_p3);

assign xor_ln74_11_fu_521_p2 = (xor_ln74_9_fu_515_p2 ^ p_13_fu_429_p3);

assign xor_ln74_7_fu_497_p2 = (select_ln65_8_fu_317_p3 ^ p_fu_183_p3);

assign xor_ln74_8_fu_503_p2 = (xor_ln74_fu_491_p2 ^ xor_ln74_7_fu_497_p2);

assign xor_ln74_9_fu_515_p2 = (xor_ln74_10_fu_509_p2 ^ select_ln65_10_fu_404_p3);

assign xor_ln74_fu_491_p2 = (select_ln65_fu_230_p3 ^ select_ln65_12_fu_483_p3);

assign zext_ln76_2_fu_549_p1 = shl_ln1_fu_541_p3;

assign zext_ln76_fu_533_p1 = oans_fu_527_p2;

endmodule //TOP_TOP_Pipeline_VITIS_LOOP_49_1
