// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module TOP_TOP_Pipeline_VITIS_LOOP_28_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        zext_ln240,
        inreg_address0,
        inreg_ce0,
        inreg_q0,
        outreg_address0,
        outreg_ce0,
        outreg_we0,
        outreg_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [2:0] zext_ln240;
output  [2:0] inreg_address0;
output   inreg_ce0;
input  [63:0] inreg_q0;
output  [2:0] outreg_address0;
output   outreg_ce0;
output   outreg_we0;
output  [63:0] outreg_d0;

reg ap_idle;
reg inreg_ce0;
reg outreg_ce0;
reg outreg_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln28_fu_407_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [7:0] p_sbox_address0;
reg    p_sbox_ce0;
wire   [7:0] p_sbox_q0;
wire   [7:0] p_sbox_address1;
reg    p_sbox_ce1;
wire   [7:0] p_sbox_q1;
wire   [7:0] p_sbox_address2;
reg    p_sbox_ce2;
wire   [7:0] p_sbox_q2;
wire   [7:0] p_sbox_address3;
reg    p_sbox_ce3;
wire   [7:0] p_sbox_q3;
wire   [7:0] p_sbox_address4;
reg    p_sbox_ce4;
wire   [7:0] p_sbox_q4;
wire   [7:0] p_sbox_address5;
reg    p_sbox_ce5;
wire   [7:0] p_sbox_q5;
wire   [7:0] p_sbox_address6;
reg    p_sbox_ce6;
wire   [7:0] p_sbox_q6;
wire   [7:0] p_sbox_address7;
reg    p_sbox_ce7;
wire   [7:0] p_sbox_q7;
wire   [7:0] p_sbox_address8;
reg    p_sbox_ce8;
wire   [7:0] p_sbox_q8;
wire   [7:0] p_sbox_address9;
reg    p_sbox_ce9;
wire   [7:0] p_sbox_q9;
wire   [7:0] p_sbox_address10;
reg    p_sbox_ce10;
wire   [7:0] p_sbox_q10;
wire   [7:0] p_sbox_address11;
reg    p_sbox_ce11;
wire   [7:0] p_sbox_q11;
wire   [7:0] p_sbox_address12;
reg    p_sbox_ce12;
wire   [7:0] p_sbox_q12;
wire   [7:0] p_sbox_address13;
reg    p_sbox_ce13;
wire   [7:0] p_sbox_q13;
wire   [7:0] p_sbox_address14;
reg    p_sbox_ce14;
wire   [7:0] p_sbox_q14;
wire   [7:0] p_sbox_address15;
reg    p_sbox_ce15;
wire   [7:0] p_sbox_q15;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln29_1_fu_429_p1;
reg   [63:0] zext_ln29_1_reg_1199;
reg   [63:0] zext_ln29_1_reg_1199_pp0_iter1_reg;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln36_fu_443_p1;
wire   [63:0] zext_ln36_1_fu_458_p1;
wire   [63:0] zext_ln36_2_fu_473_p1;
wire   [63:0] zext_ln36_3_fu_488_p1;
wire   [63:0] zext_ln36_4_fu_503_p1;
wire   [63:0] zext_ln36_5_fu_518_p1;
wire   [63:0] zext_ln36_6_fu_533_p1;
wire   [63:0] zext_ln36_7_fu_548_p1;
wire   [63:0] zext_ln36_8_fu_563_p1;
wire   [63:0] zext_ln36_9_fu_578_p1;
wire   [63:0] zext_ln36_10_fu_593_p1;
wire   [63:0] zext_ln36_11_fu_608_p1;
wire   [63:0] zext_ln36_12_fu_623_p1;
wire   [63:0] zext_ln36_13_fu_638_p1;
wire   [63:0] zext_ln36_14_fu_653_p1;
wire   [63:0] zext_ln36_15_fu_668_p1;
reg   [1:0] i_fu_170;
wire   [1:0] add_ln28_fu_413_p2;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_i_1;
wire   [2:0] zext_ln29_fu_419_p1;
wire   [2:0] add_ln29_fu_423_p2;
wire   [7:0] p_fu_439_p1;
wire   [7:0] p_8_fu_448_p4;
wire   [7:0] p_9_fu_463_p4;
wire   [7:0] p_s_fu_478_p4;
wire   [7:0] p_1_fu_493_p4;
wire   [7:0] p_2_fu_508_p4;
wire   [7:0] p_3_fu_523_p4;
wire   [7:0] p_4_fu_538_p4;
wire   [7:0] p_5_fu_553_p4;
wire   [7:0] p_6_fu_568_p4;
wire   [7:0] p_7_fu_583_p4;
wire   [7:0] p_10_fu_598_p4;
wire   [7:0] p_11_fu_613_p4;
wire   [7:0] p_12_fu_628_p4;
wire   [7:0] p_13_fu_643_p4;
wire   [7:0] p_14_fu_658_p4;
wire   [6:0] trunc_ln38_fu_679_p1;
wire   [6:0] trunc_ln38_1_fu_691_p1;
wire   [2:0] trunc_ln38_2_fu_703_p1;
wire   [6:0] trunc_ln38_3_fu_715_p1;
wire   [6:0] trunc_ln38_4_fu_727_p1;
wire   [6:0] trunc_ln38_5_fu_739_p1;
wire   [2:0] trunc_ln38_6_fu_751_p1;
wire   [6:0] trunc_ln38_7_fu_763_p1;
wire   [6:0] trunc_ln38_8_fu_775_p1;
wire   [6:0] trunc_ln38_9_fu_787_p1;
wire   [2:0] trunc_ln38_10_fu_799_p1;
wire   [6:0] trunc_ln38_11_fu_811_p1;
wire   [6:0] trunc_ln38_12_fu_823_p1;
wire   [6:0] trunc_ln38_13_fu_835_p1;
wire   [7:0] shl_ln38_fu_673_p2;
wire   [0:0] tmp_fu_853_p3;
wire   [7:0] or_ln38_fu_847_p2;
wire   [8:0] shl_ln38_1_fu_683_p3;
wire   [8:0] tmp_4_fu_861_p3;
wire   [0:0] tmp_22_fu_875_p3;
wire   [8:0] or_ln38_1_fu_869_p2;
wire   [9:0] shl_ln38_2_fu_695_p3;
wire   [9:0] tmp_s_fu_883_p3;
wire   [0:0] tmp_24_fu_897_p3;
wire   [9:0] or_ln38_2_fu_891_p2;
wire   [10:0] shl_ln38_3_fu_707_p3;
wire   [10:0] tmp_3_fu_905_p3;
wire   [4:0] tmp_5_fu_919_p4;
wire   [10:0] or_ln38_3_fu_913_p2;
wire   [15:0] shl_ln38_4_fu_719_p3;
wire   [15:0] tmp_6_fu_929_p3;
wire   [0:0] tmp_26_fu_943_p3;
wire   [15:0] or_ln38_4_fu_937_p2;
wire   [16:0] shl_ln38_5_fu_731_p3;
wire   [16:0] tmp_7_fu_951_p3;
wire   [0:0] tmp_30_fu_965_p3;
wire   [16:0] or_ln38_5_fu_959_p2;
wire   [17:0] shl_ln38_6_fu_743_p3;
wire   [17:0] tmp_8_fu_973_p3;
wire   [0:0] tmp_32_fu_987_p3;
wire   [17:0] or_ln38_6_fu_981_p2;
wire   [18:0] shl_ln38_7_fu_755_p3;
wire   [18:0] tmp_9_fu_995_p3;
wire   [4:0] tmp_10_fu_1009_p4;
wire   [18:0] or_ln38_7_fu_1003_p2;
wire   [23:0] shl_ln38_8_fu_767_p3;
wire   [23:0] tmp_11_fu_1019_p3;
wire   [0:0] tmp_34_fu_1033_p3;
wire   [23:0] or_ln38_8_fu_1027_p2;
wire   [24:0] shl_ln38_9_fu_779_p3;
wire   [24:0] tmp_12_fu_1041_p3;
wire   [0:0] tmp_35_fu_1055_p3;
wire   [24:0] or_ln38_9_fu_1049_p2;
wire   [25:0] shl_ln38_s_fu_791_p3;
wire   [25:0] tmp_13_fu_1063_p3;
wire   [0:0] tmp_36_fu_1077_p3;
wire   [25:0] or_ln38_10_fu_1071_p2;
wire   [26:0] shl_ln38_10_fu_803_p3;
wire   [26:0] tmp_14_fu_1085_p3;
wire   [4:0] tmp_15_fu_1099_p4;
wire   [26:0] or_ln38_11_fu_1093_p2;
wire   [31:0] shl_ln38_11_fu_815_p3;
wire   [31:0] tmp_16_fu_1109_p3;
wire   [0:0] tmp_37_fu_1123_p3;
wire   [31:0] or_ln38_12_fu_1117_p2;
wire   [32:0] shl_ln38_12_fu_827_p3;
wire   [32:0] tmp_17_fu_1131_p3;
wire   [0:0] tmp_38_fu_1145_p3;
wire   [32:0] or_ln38_13_fu_1139_p2;
wire   [33:0] shl_ln38_13_fu_839_p3;
wire   [33:0] tmp_18_fu_1153_p3;
wire   [0:0] tmp_39_fu_1167_p3;
wire   [33:0] or_ln38_14_fu_1161_p2;
wire   [34:0] b_fu_1175_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
   ap_CS_fsm = 1'd1;
   ap_enable_reg_pp0_iter1 = 1'b0;
   ap_enable_reg_pp0_iter2 = 1'b0;
   i_fu_170 = 2'd0;
   ap_done_reg = 1'b0;
end

TOP_TOP_Pipeline_VITIS_LOOP_28_1_p_sbox_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
p_sbox_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_sbox_address0),
    .ce0(p_sbox_ce0),
    .q0(p_sbox_q0),
    .address1(p_sbox_address1),
    .ce1(p_sbox_ce1),
    .q1(p_sbox_q1),
    .address2(p_sbox_address2),
    .ce2(p_sbox_ce2),
    .q2(p_sbox_q2),
    .address3(p_sbox_address3),
    .ce3(p_sbox_ce3),
    .q3(p_sbox_q3),
    .address4(p_sbox_address4),
    .ce4(p_sbox_ce4),
    .q4(p_sbox_q4),
    .address5(p_sbox_address5),
    .ce5(p_sbox_ce5),
    .q5(p_sbox_q5),
    .address6(p_sbox_address6),
    .ce6(p_sbox_ce6),
    .q6(p_sbox_q6),
    .address7(p_sbox_address7),
    .ce7(p_sbox_ce7),
    .q7(p_sbox_q7),
    .address8(p_sbox_address8),
    .ce8(p_sbox_ce8),
    .q8(p_sbox_q8),
    .address9(p_sbox_address9),
    .ce9(p_sbox_ce9),
    .q9(p_sbox_q9),
    .address10(p_sbox_address10),
    .ce10(p_sbox_ce10),
    .q10(p_sbox_q10),
    .address11(p_sbox_address11),
    .ce11(p_sbox_ce11),
    .q11(p_sbox_q11),
    .address12(p_sbox_address12),
    .ce12(p_sbox_ce12),
    .q12(p_sbox_q12),
    .address13(p_sbox_address13),
    .ce13(p_sbox_ce13),
    .q13(p_sbox_q13),
    .address14(p_sbox_address14),
    .ce14(p_sbox_ce14),
    .q14(p_sbox_q14),
    .address15(p_sbox_address15),
    .ce15(p_sbox_ce15),
    .q15(p_sbox_q15)
);

TOP_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln28_fu_407_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_170 <= add_ln28_fu_413_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_170 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        zext_ln29_1_reg_1199[2 : 0] <= zext_ln29_1_fu_429_p1[2 : 0];
        zext_ln29_1_reg_1199_pp0_iter1_reg[2 : 0] <= zext_ln29_1_reg_1199[2 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln28_fu_407_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 2'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_170;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inreg_ce0 = 1'b1;
    end else begin
        inreg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        outreg_ce0 = 1'b1;
    end else begin
        outreg_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        outreg_we0 = 1'b1;
    end else begin
        outreg_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_sbox_ce0 = 1'b1;
    end else begin
        p_sbox_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_sbox_ce1 = 1'b1;
    end else begin
        p_sbox_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_sbox_ce10 = 1'b1;
    end else begin
        p_sbox_ce10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_sbox_ce11 = 1'b1;
    end else begin
        p_sbox_ce11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_sbox_ce12 = 1'b1;
    end else begin
        p_sbox_ce12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_sbox_ce13 = 1'b1;
    end else begin
        p_sbox_ce13 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_sbox_ce14 = 1'b1;
    end else begin
        p_sbox_ce14 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_sbox_ce15 = 1'b1;
    end else begin
        p_sbox_ce15 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_sbox_ce2 = 1'b1;
    end else begin
        p_sbox_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_sbox_ce3 = 1'b1;
    end else begin
        p_sbox_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_sbox_ce4 = 1'b1;
    end else begin
        p_sbox_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_sbox_ce5 = 1'b1;
    end else begin
        p_sbox_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_sbox_ce6 = 1'b1;
    end else begin
        p_sbox_ce6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_sbox_ce7 = 1'b1;
    end else begin
        p_sbox_ce7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_sbox_ce8 = 1'b1;
    end else begin
        p_sbox_ce8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_sbox_ce9 = 1'b1;
    end else begin
        p_sbox_ce9 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln28_fu_413_p2 = (ap_sig_allocacmp_i_1 + 2'd1);

assign add_ln29_fu_423_p2 = (zext_ln240 + zext_ln29_fu_419_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign b_fu_1175_p3 = {{tmp_39_fu_1167_p3}, {or_ln38_14_fu_1161_p2}};

assign icmp_ln28_fu_407_p2 = ((ap_sig_allocacmp_i_1 == 2'd2) ? 1'b1 : 1'b0);

assign inreg_address0 = zext_ln29_1_fu_429_p1;

assign or_ln38_10_fu_1071_p2 = (tmp_13_fu_1063_p3 | shl_ln38_s_fu_791_p3);

assign or_ln38_11_fu_1093_p2 = (tmp_14_fu_1085_p3 | shl_ln38_10_fu_803_p3);

assign or_ln38_12_fu_1117_p2 = (tmp_16_fu_1109_p3 | shl_ln38_11_fu_815_p3);

assign or_ln38_13_fu_1139_p2 = (tmp_17_fu_1131_p3 | shl_ln38_12_fu_827_p3);

assign or_ln38_14_fu_1161_p2 = (tmp_18_fu_1153_p3 | shl_ln38_13_fu_839_p3);

assign or_ln38_1_fu_869_p2 = (tmp_4_fu_861_p3 | shl_ln38_1_fu_683_p3);

assign or_ln38_2_fu_891_p2 = (tmp_s_fu_883_p3 | shl_ln38_2_fu_695_p3);

assign or_ln38_3_fu_913_p2 = (tmp_3_fu_905_p3 | shl_ln38_3_fu_707_p3);

assign or_ln38_4_fu_937_p2 = (tmp_6_fu_929_p3 | shl_ln38_4_fu_719_p3);

assign or_ln38_5_fu_959_p2 = (tmp_7_fu_951_p3 | shl_ln38_5_fu_731_p3);

assign or_ln38_6_fu_981_p2 = (tmp_8_fu_973_p3 | shl_ln38_6_fu_743_p3);

assign or_ln38_7_fu_1003_p2 = (tmp_9_fu_995_p3 | shl_ln38_7_fu_755_p3);

assign or_ln38_8_fu_1027_p2 = (tmp_11_fu_1019_p3 | shl_ln38_8_fu_767_p3);

assign or_ln38_9_fu_1049_p2 = (tmp_12_fu_1041_p3 | shl_ln38_9_fu_779_p3);

assign or_ln38_fu_847_p2 = (shl_ln38_fu_673_p2 | p_sbox_q15);

assign outreg_address0 = zext_ln29_1_reg_1199_pp0_iter1_reg;

assign outreg_d0 = b_fu_1175_p3;

assign p_10_fu_598_p4 = {{inreg_q0[26:19]}};

assign p_11_fu_613_p4 = {{inreg_q0[31:24]}};

assign p_12_fu_628_p4 = {{inreg_q0[32:25]}};

assign p_13_fu_643_p4 = {{inreg_q0[33:26]}};

assign p_14_fu_658_p4 = {{inreg_q0[34:27]}};

assign p_1_fu_493_p4 = {{inreg_q0[15:8]}};

assign p_2_fu_508_p4 = {{inreg_q0[16:9]}};

assign p_3_fu_523_p4 = {{inreg_q0[17:10]}};

assign p_4_fu_538_p4 = {{inreg_q0[18:11]}};

assign p_5_fu_553_p4 = {{inreg_q0[23:16]}};

assign p_6_fu_568_p4 = {{inreg_q0[24:17]}};

assign p_7_fu_583_p4 = {{inreg_q0[25:18]}};

assign p_8_fu_448_p4 = {{inreg_q0[8:1]}};

assign p_9_fu_463_p4 = {{inreg_q0[9:2]}};

assign p_fu_439_p1 = inreg_q0[7:0];

assign p_s_fu_478_p4 = {{inreg_q0[10:3]}};

assign p_sbox_address0 = zext_ln36_15_fu_668_p1;

assign p_sbox_address1 = zext_ln36_14_fu_653_p1;

assign p_sbox_address10 = zext_ln36_5_fu_518_p1;

assign p_sbox_address11 = zext_ln36_4_fu_503_p1;

assign p_sbox_address12 = zext_ln36_3_fu_488_p1;

assign p_sbox_address13 = zext_ln36_2_fu_473_p1;

assign p_sbox_address14 = zext_ln36_1_fu_458_p1;

assign p_sbox_address15 = zext_ln36_fu_443_p1;

assign p_sbox_address2 = zext_ln36_13_fu_638_p1;

assign p_sbox_address3 = zext_ln36_12_fu_623_p1;

assign p_sbox_address4 = zext_ln36_11_fu_608_p1;

assign p_sbox_address5 = zext_ln36_10_fu_593_p1;

assign p_sbox_address6 = zext_ln36_9_fu_578_p1;

assign p_sbox_address7 = zext_ln36_8_fu_563_p1;

assign p_sbox_address8 = zext_ln36_7_fu_548_p1;

assign p_sbox_address9 = zext_ln36_6_fu_533_p1;

assign shl_ln38_10_fu_803_p3 = {{trunc_ln38_10_fu_799_p1}, {24'd0}};

assign shl_ln38_11_fu_815_p3 = {{trunc_ln38_11_fu_811_p1}, {25'd0}};

assign shl_ln38_12_fu_827_p3 = {{trunc_ln38_12_fu_823_p1}, {26'd0}};

assign shl_ln38_13_fu_839_p3 = {{trunc_ln38_13_fu_835_p1}, {27'd0}};

assign shl_ln38_1_fu_683_p3 = {{trunc_ln38_fu_679_p1}, {2'd0}};

assign shl_ln38_2_fu_695_p3 = {{trunc_ln38_1_fu_691_p1}, {3'd0}};

assign shl_ln38_3_fu_707_p3 = {{trunc_ln38_2_fu_703_p1}, {8'd0}};

assign shl_ln38_4_fu_719_p3 = {{trunc_ln38_3_fu_715_p1}, {9'd0}};

assign shl_ln38_5_fu_731_p3 = {{trunc_ln38_4_fu_727_p1}, {10'd0}};

assign shl_ln38_6_fu_743_p3 = {{trunc_ln38_5_fu_739_p1}, {11'd0}};

assign shl_ln38_7_fu_755_p3 = {{trunc_ln38_6_fu_751_p1}, {16'd0}};

assign shl_ln38_8_fu_767_p3 = {{trunc_ln38_7_fu_763_p1}, {17'd0}};

assign shl_ln38_9_fu_779_p3 = {{trunc_ln38_8_fu_775_p1}, {18'd0}};

assign shl_ln38_fu_673_p2 = p_sbox_q14 << 8'd1;

assign shl_ln38_s_fu_791_p3 = {{trunc_ln38_9_fu_787_p1}, {19'd0}};

assign tmp_10_fu_1009_p4 = {{p_sbox_q7[7:3]}};

assign tmp_11_fu_1019_p3 = {{tmp_10_fu_1009_p4}, {or_ln38_7_fu_1003_p2}};

assign tmp_12_fu_1041_p3 = {{tmp_34_fu_1033_p3}, {or_ln38_8_fu_1027_p2}};

assign tmp_13_fu_1063_p3 = {{tmp_35_fu_1055_p3}, {or_ln38_9_fu_1049_p2}};

assign tmp_14_fu_1085_p3 = {{tmp_36_fu_1077_p3}, {or_ln38_10_fu_1071_p2}};

assign tmp_15_fu_1099_p4 = {{p_sbox_q3[7:3]}};

assign tmp_16_fu_1109_p3 = {{tmp_15_fu_1099_p4}, {or_ln38_11_fu_1093_p2}};

assign tmp_17_fu_1131_p3 = {{tmp_37_fu_1123_p3}, {or_ln38_12_fu_1117_p2}};

assign tmp_18_fu_1153_p3 = {{tmp_38_fu_1145_p3}, {or_ln38_13_fu_1139_p2}};

assign tmp_22_fu_875_p3 = p_sbox_q13[32'd7];

assign tmp_24_fu_897_p3 = p_sbox_q12[32'd7];

assign tmp_26_fu_943_p3 = p_sbox_q10[32'd7];

assign tmp_30_fu_965_p3 = p_sbox_q9[32'd7];

assign tmp_32_fu_987_p3 = p_sbox_q8[32'd7];

assign tmp_34_fu_1033_p3 = p_sbox_q6[32'd7];

assign tmp_35_fu_1055_p3 = p_sbox_q5[32'd7];

assign tmp_36_fu_1077_p3 = p_sbox_q4[32'd7];

assign tmp_37_fu_1123_p3 = p_sbox_q2[32'd7];

assign tmp_38_fu_1145_p3 = p_sbox_q1[32'd7];

assign tmp_39_fu_1167_p3 = p_sbox_q0[32'd7];

assign tmp_3_fu_905_p3 = {{tmp_24_fu_897_p3}, {or_ln38_2_fu_891_p2}};

assign tmp_4_fu_861_p3 = {{tmp_fu_853_p3}, {or_ln38_fu_847_p2}};

assign tmp_5_fu_919_p4 = {{p_sbox_q11[7:3]}};

assign tmp_6_fu_929_p3 = {{tmp_5_fu_919_p4}, {or_ln38_3_fu_913_p2}};

assign tmp_7_fu_951_p3 = {{tmp_26_fu_943_p3}, {or_ln38_4_fu_937_p2}};

assign tmp_8_fu_973_p3 = {{tmp_30_fu_965_p3}, {or_ln38_5_fu_959_p2}};

assign tmp_9_fu_995_p3 = {{tmp_32_fu_987_p3}, {or_ln38_6_fu_981_p2}};

assign tmp_fu_853_p3 = p_sbox_q14[32'd7];

assign tmp_s_fu_883_p3 = {{tmp_22_fu_875_p3}, {or_ln38_1_fu_869_p2}};

assign trunc_ln38_10_fu_799_p1 = p_sbox_q3[2:0];

assign trunc_ln38_11_fu_811_p1 = p_sbox_q2[6:0];

assign trunc_ln38_12_fu_823_p1 = p_sbox_q1[6:0];

assign trunc_ln38_13_fu_835_p1 = p_sbox_q0[6:0];

assign trunc_ln38_1_fu_691_p1 = p_sbox_q12[6:0];

assign trunc_ln38_2_fu_703_p1 = p_sbox_q11[2:0];

assign trunc_ln38_3_fu_715_p1 = p_sbox_q10[6:0];

assign trunc_ln38_4_fu_727_p1 = p_sbox_q9[6:0];

assign trunc_ln38_5_fu_739_p1 = p_sbox_q8[6:0];

assign trunc_ln38_6_fu_751_p1 = p_sbox_q7[2:0];

assign trunc_ln38_7_fu_763_p1 = p_sbox_q6[6:0];

assign trunc_ln38_8_fu_775_p1 = p_sbox_q5[6:0];

assign trunc_ln38_9_fu_787_p1 = p_sbox_q4[6:0];

assign trunc_ln38_fu_679_p1 = p_sbox_q13[6:0];

assign zext_ln29_1_fu_429_p1 = add_ln29_fu_423_p2;

assign zext_ln29_fu_419_p1 = ap_sig_allocacmp_i_1;

assign zext_ln36_10_fu_593_p1 = p_7_fu_583_p4;

assign zext_ln36_11_fu_608_p1 = p_10_fu_598_p4;

assign zext_ln36_12_fu_623_p1 = p_11_fu_613_p4;

assign zext_ln36_13_fu_638_p1 = p_12_fu_628_p4;

assign zext_ln36_14_fu_653_p1 = p_13_fu_643_p4;

assign zext_ln36_15_fu_668_p1 = p_14_fu_658_p4;

assign zext_ln36_1_fu_458_p1 = p_8_fu_448_p4;

assign zext_ln36_2_fu_473_p1 = p_9_fu_463_p4;

assign zext_ln36_3_fu_488_p1 = p_s_fu_478_p4;

assign zext_ln36_4_fu_503_p1 = p_1_fu_493_p4;

assign zext_ln36_5_fu_518_p1 = p_2_fu_508_p4;

assign zext_ln36_6_fu_533_p1 = p_3_fu_523_p4;

assign zext_ln36_7_fu_548_p1 = p_4_fu_538_p4;

assign zext_ln36_8_fu_563_p1 = p_5_fu_553_p4;

assign zext_ln36_9_fu_578_p1 = p_6_fu_568_p4;

assign zext_ln36_fu_443_p1 = p_fu_439_p1;

always @ (posedge ap_clk) begin
    zext_ln29_1_reg_1199[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
    zext_ln29_1_reg_1199_pp0_iter1_reg[63:3] <= 61'b0000000000000000000000000000000000000000000000000000000000000;
end

endmodule //TOP_TOP_Pipeline_VITIS_LOOP_28_1
