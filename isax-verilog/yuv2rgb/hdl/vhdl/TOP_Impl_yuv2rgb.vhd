-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity TOP_Impl_yuv2rgb is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    in_0_0_val : IN STD_LOGIC_VECTOR (63 downto 0);
    in_0_1_val : IN STD_LOGIC_VECTOR (63 downto 0);
    out_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC;
    out_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_r_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_r_ce1 : OUT STD_LOGIC;
    out_r_we1 : OUT STD_LOGIC;
    out_r_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_offset : IN STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of TOP_Impl_yuv2rgb is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv17_12A : STD_LOGIC_VECTOR (16 downto 0) := "00000000100101010";
    constant ap_const_lv18_199 : STD_LOGIC_VECTOR (17 downto 0) := "000000000110011001";
    constant ap_const_lv16_FF9C : STD_LOGIC_VECTOR (15 downto 0) := "1111111110011100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv18_3EDE0 : STD_LOGIC_VECTOR (17 downto 0) := "111110110111100000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv16_FF30 : STD_LOGIC_VECTOR (15 downto 0) := "1111111100110000";
    constant ap_const_lv16_ED60 : STD_LOGIC_VECTOR (15 downto 0) := "1110110101100000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal u_fu_151_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal u_reg_2571 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal E_fu_165_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal E_reg_2576 : STD_LOGIC_VECTOR (7 downto 0);
    signal u_1_reg_2586 : STD_LOGIC_VECTOR (7 downto 0);
    signal E_1_fu_195_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal E_1_reg_2591 : STD_LOGIC_VECTOR (7 downto 0);
    signal u_2_reg_2601 : STD_LOGIC_VECTOR (7 downto 0);
    signal u_2_reg_2601_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal v_2_reg_2606 : STD_LOGIC_VECTOR (7 downto 0);
    signal u_3_reg_2611 : STD_LOGIC_VECTOR (7 downto 0);
    signal u_3_reg_2611_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln3_reg_2616 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_offset_read_reg_2621 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal y_fu_245_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_reg_2627 : STD_LOGIC_VECTOR (7 downto 0);
    signal y_1_reg_2632 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_reg_2637 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_reg_2642 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_reg_2642_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_10_reg_2647 : STD_LOGIC_VECTOR (7 downto 0);
    signal E_2_fu_289_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal E_2_reg_2652 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_reg_2662 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_reg_2667 : STD_LOGIC_VECTOR (7 downto 0);
    signal E_3_fu_318_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal E_3_reg_2672 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_reg_2682 : STD_LOGIC_VECTOR (7 downto 0);
    signal D_fu_340_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal D_reg_2687 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_fu_352_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_reg_2693 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_1_fu_358_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln20_1_reg_2698 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_80_fu_364_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_80_reg_2704 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln20_2_fu_373_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_2_reg_2709 : STD_LOGIC_VECTOR (16 downto 0);
    signal D_1_fu_382_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal D_1_reg_2714 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_3_fu_394_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_3_reg_2720 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_4_fu_400_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln20_4_reg_2725 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_81_fu_406_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_81_reg_2731 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_fu_422_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_reg_2736 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln20_4_fu_918_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln20_4_reg_2742 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_cast9_fu_929_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_cast9_reg_2747 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln21_3_fu_938_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln21_3_reg_2752 : STD_LOGIC_VECTOR (17 downto 0);
    signal D_2_fu_1095_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal D_2_reg_2757 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_6_fu_1107_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_6_reg_2763 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_7_fu_1113_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln20_7_reg_2768 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_82_fu_1119_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_82_reg_2774 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln20_8_fu_1128_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_8_reg_2779 : STD_LOGIC_VECTOR (16 downto 0);
    signal D_3_fu_1137_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal D_3_reg_2784 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_9_fu_1149_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_9_reg_2790 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_10_fu_1155_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln20_10_reg_2795 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_83_fu_1161_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_83_reg_2801 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln20_11_fu_1170_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_11_reg_2806 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_port_reg_in_0_0_val : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_port_reg_out_offset : STD_LOGIC_VECTOR (1 downto 0);
    signal p_cast118_fu_428_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln67_fu_1181_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln68_fu_1191_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln39_1_fu_1071_p9 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln51_1_fu_2514_p9 : STD_LOGIC_VECTOR (63 downto 0);
    signal v_fu_155_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal v_1_fu_185_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_fu_352_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_fu_352_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln20_1_fu_358_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_80_fu_364_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_2_fu_373_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_2_fu_373_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln20_3_fu_394_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_3_fu_394_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln20_4_fu_400_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_81_fu_406_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_415_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal out_offset_cast117_fu_412_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln20_fu_433_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln20_fu_436_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln20_1_fu_446_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_cast_fu_461_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2535_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln21_1_fu_470_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln21_fu_464_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln_fu_479_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln22_1_fu_490_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln22_fu_486_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln22_1_fu_497_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln22_8_fu_501_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln22_2_fu_507_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln20_fu_442_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln22_fu_511_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_4_fu_535_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_527_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln25_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln25_fu_565_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln25_1_fu_557_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln20_1_fu_451_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln21_1_fu_473_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_23_fu_587_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_fu_579_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_623_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_24_fu_615_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln27_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_fu_633_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_fu_653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_1_fu_645_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln22_1_fu_517_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln26_fu_603_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln26_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_2_fu_667_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_675_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln20_2_fu_693_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln20_2_fu_696_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln20_3_fu_706_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln21_4_fu_721_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln20_1_fu_702_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_27_fu_747_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_26_fu_739_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln25_1_fu_763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_1_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln25_1_fu_777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln25_6_fu_769_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln20_3_fu_711_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln21_3_fu_727_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_29_fu_799_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_28_fu_791_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_1_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln22_1_fu_733_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_31_fu_835_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_30_fu_827_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_1_fu_845_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln26_1_fu_815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln26_1_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_4_fu_863_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_871_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln27_1_fu_851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_1_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_4_fu_889_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_897_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln20_3_fu_915_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2544_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln21_6_fu_932_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln21_5_fu_941_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln20_5_fu_924_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_33_fu_965_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_32_fu_957_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_2_fu_975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_1001_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_34_fu_993_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln26_2_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_2_fu_1011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln26_2_fu_1031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_5_fu_1023_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln21_5_fu_947_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln25_2_fu_981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln25_2_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln25_8_fu_1045_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_1053_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal G_fu_1037_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln25_fu_1063_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln27_fu_907_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln26_1_fu_881_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_1_fu_783_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal B_fu_659_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln26_fu_685_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_fu_571_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_6_fu_1107_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_6_fu_1107_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln20_7_fu_1113_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_82_fu_1119_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_8_fu_1128_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_8_fu_1128_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln20_9_fu_1149_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_9_fu_1149_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln20_10_fu_1155_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_83_fu_1161_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_11_fu_1170_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_11_fu_1170_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln67_fu_1176_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln68_fu_1186_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln22_2_fu_1199_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln22_3_fu_1210_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln22_3_fu_1206_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln22_4_fu_1217_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln22_9_fu_1221_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln22_5_fu_1227_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln20_2_fu_1196_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln22_2_fu_1231_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_37_fu_1255_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_36_fu_1247_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln27_2_fu_1271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_2_fu_1265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_2_fu_1285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_6_fu_1277_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln22_5_fu_1237_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_5_fu_1302_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln20_5_fu_1302_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln20_5_fu_1302_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln20_4_fu_1308_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln20_6_fu_1312_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln20_7_fu_1322_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln21_10_fu_1337_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln20_3_fu_1318_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln22_3_fu_1347_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_39_fu_1371_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_38_fu_1363_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln25_3_fu_1387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_3_fu_1381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln25_3_fu_1401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln25_9_fu_1393_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln20_8_fu_1327_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln21_7_fu_1342_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_41_fu_1423_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_40_fu_1415_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_3_fu_1433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_fu_1459_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_42_fu_1451_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln27_3_fu_1475_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_3_fu_1469_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_3_fu_1489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_8_fu_1481_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln22_7_fu_1353_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln26_3_fu_1439_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln26_3_fu_1445_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_8_fu_1503_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_fu_1511_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln20_5_fu_1529_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln20_8_fu_1532_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_cast18_fu_1547_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2553_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln21_5_fu_1556_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln21_12_fu_1550_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln21_9_fu_1559_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln22_4_fu_1575_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln22_5_fu_1586_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln22_6_fu_1582_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln22_7_fu_1593_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln22_10_fu_1597_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln22_8_fu_1603_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln20_4_fu_1538_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln20_9_fu_1542_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_45_fu_1621_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_44_fu_1613_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_4_fu_1631_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_1657_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_46_fu_1649_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln26_4_fu_1673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_4_fu_1667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln26_4_fu_1687_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_9_fu_1679_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln21_9_fu_1565_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln22_4_fu_1607_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_49_fu_1709_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_48_fu_1701_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_4_fu_1719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln25_4_fu_1637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln25_4_fu_1643_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln25_11_fu_1737_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_1745_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln27_4_fu_1725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_4_fu_1731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_10_fu_1763_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_1771_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln20_6_fu_1789_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln20_10_fu_1792_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln20_11_fu_1802_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln21_16_fu_1817_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln21_11_fu_1823_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln20_5_fu_1798_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln22_5_fu_1839_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_51_fu_1863_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_50_fu_1855_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln25_5_fu_1879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_5_fu_1873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln25_5_fu_1893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln25_12_fu_1885_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln20_5_fu_1807_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_53_fu_1915_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_52_fu_1907_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln26_5_fu_1931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_5_fu_1925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln26_5_fu_1945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_11_fu_1937_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln21_1_fu_1829_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_55_fu_1967_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_54_fu_1959_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln27_5_fu_1983_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_5_fu_1977_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_5_fu_1997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_11_fu_1989_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln22_3_fu_1845_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_3_fu_1899_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln27_3_fu_1781_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal G_1_fu_1693_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln25_2_fu_1755_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal B_2_fu_1495_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln26_3_fu_1521_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal R_2_fu_1407_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal B_1_fu_1291_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln20_7_fu_2032_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln20_12_fu_2035_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_cast26_fu_2050_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_2562_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln21_7_fu_2059_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln21_17_fu_2053_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln22_6_fu_2068_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln22_7_fu_2079_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln22_9_fu_2075_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln22_10_fu_2086_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln22_11_fu_2090_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln22_11_fu_2096_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln20_6_fu_2041_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln20_13_fu_2045_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_57_fu_2114_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_56_fu_2106_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_6_fu_2124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln21_13_fu_2062_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_59_fu_2150_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_58_fu_2142_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_6_fu_2160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln22_6_fu_2100_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_61_fu_2186_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_60_fu_2178_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_6_fu_2196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln25_6_fu_2130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln25_6_fu_2136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln25_14_fu_2214_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_2222_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln26_6_fu_2166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln26_6_fu_2172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_13_fu_2240_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_2248_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln27_6_fu_2202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_6_fu_2208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_13_fu_2266_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_2274_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln20_8_fu_2292_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln20_14_fu_2295_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln21_19_fu_2310_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln21_15_fu_2316_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln20_7_fu_2301_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln22_7_fu_2332_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln20_15_fu_2305_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_63_fu_2356_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_62_fu_2348_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_7_fu_2366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_2392_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_64_fu_2384_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln26_7_fu_2408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_7_fu_2402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln26_7_fu_2422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln26_14_fu_2414_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln21_s_fu_2322_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_67_fu_2444_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_66_fu_2436_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln27_7_fu_2460_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_7_fu_2454_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln27_7_fu_2474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln27_14_fu_2466_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln22_s_fu_2338_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln25_7_fu_2372_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln25_7_fu_2378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln25_15_fu_2488_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_19_fu_2496_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal B_4_fu_2480_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal G_3_fu_2428_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln25_5_fu_2506_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln27_5_fu_2284_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln26_6_fu_2258_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln25_4_fu_2232_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal B_3_fu_2003_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal G_2_fu_1951_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2535_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2535_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_2544_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2544_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_2553_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2553_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_2562_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2562_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_2535_ce : STD_LOGIC;
    signal grp_fu_2544_ce : STD_LOGIC;
    signal grp_fu_2553_ce : STD_LOGIC;
    signal grp_fu_2562_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0_1to2 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal mul_ln20_11_fu_1170_p00 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_2_fu_373_p00 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_3_fu_394_p00 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_5_fu_1302_p00 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_6_fu_1107_p00 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_8_fu_1128_p00 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_9_fu_1149_p00 : STD_LOGIC_VECTOR (16 downto 0);
    signal mul_ln20_fu_352_p00 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component TOP_mul_8ns_10ns_17_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component TOP_mul_8s_10ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component TOP_mul_8s_8s_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component TOP_mac_muladd_8s_9s_14s_16_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    mul_8ns_10ns_17_1_1_U1 : component TOP_mul_8ns_10ns_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 17)
    port map (
        din0 => mul_ln20_fu_352_p0,
        din1 => mul_ln20_fu_352_p1,
        dout => mul_ln20_fu_352_p2);

    mul_8s_10ns_18_1_1_U2 : component TOP_mul_8s_10ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 18)
    port map (
        din0 => E_reg_2576,
        din1 => mul_ln20_1_fu_358_p1,
        dout => mul_ln20_1_fu_358_p2);

    mul_8s_8s_16_1_1_U3 : component TOP_mul_8s_8s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => D_fu_340_p2,
        din1 => empty_80_fu_364_p1,
        dout => empty_80_fu_364_p2);

    mul_8ns_10ns_17_1_1_U4 : component TOP_mul_8ns_10ns_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 17)
    port map (
        din0 => mul_ln20_2_fu_373_p0,
        din1 => mul_ln20_2_fu_373_p1,
        dout => mul_ln20_2_fu_373_p2);

    mul_8ns_10ns_17_1_1_U5 : component TOP_mul_8ns_10ns_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 17)
    port map (
        din0 => mul_ln20_3_fu_394_p0,
        din1 => mul_ln20_3_fu_394_p1,
        dout => mul_ln20_3_fu_394_p2);

    mul_8s_10ns_18_1_1_U6 : component TOP_mul_8s_10ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 18)
    port map (
        din0 => E_1_reg_2591,
        din1 => mul_ln20_4_fu_400_p1,
        dout => mul_ln20_4_fu_400_p2);

    mul_8s_8s_16_1_1_U7 : component TOP_mul_8s_8s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => D_1_fu_382_p2,
        din1 => empty_81_fu_406_p1,
        dout => empty_81_fu_406_p2);

    mul_8ns_10ns_17_1_1_U8 : component TOP_mul_8ns_10ns_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 17)
    port map (
        din0 => mul_ln20_6_fu_1107_p0,
        din1 => mul_ln20_6_fu_1107_p1,
        dout => mul_ln20_6_fu_1107_p2);

    mul_8s_10ns_18_1_1_U9 : component TOP_mul_8s_10ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 18)
    port map (
        din0 => E_2_reg_2652,
        din1 => mul_ln20_7_fu_1113_p1,
        dout => mul_ln20_7_fu_1113_p2);

    mul_8s_8s_16_1_1_U10 : component TOP_mul_8s_8s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => D_2_fu_1095_p2,
        din1 => empty_82_fu_1119_p1,
        dout => empty_82_fu_1119_p2);

    mul_8ns_10ns_17_1_1_U11 : component TOP_mul_8ns_10ns_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 17)
    port map (
        din0 => mul_ln20_8_fu_1128_p0,
        din1 => mul_ln20_8_fu_1128_p1,
        dout => mul_ln20_8_fu_1128_p2);

    mul_8ns_10ns_17_1_1_U12 : component TOP_mul_8ns_10ns_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 17)
    port map (
        din0 => mul_ln20_9_fu_1149_p0,
        din1 => mul_ln20_9_fu_1149_p1,
        dout => mul_ln20_9_fu_1149_p2);

    mul_8s_10ns_18_1_1_U13 : component TOP_mul_8s_10ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 18)
    port map (
        din0 => E_3_reg_2672,
        din1 => mul_ln20_10_fu_1155_p1,
        dout => mul_ln20_10_fu_1155_p2);

    mul_8s_8s_16_1_1_U14 : component TOP_mul_8s_8s_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => D_3_fu_1137_p2,
        din1 => empty_83_fu_1161_p1,
        dout => empty_83_fu_1161_p2);

    mul_8ns_10ns_17_1_1_U15 : component TOP_mul_8ns_10ns_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 17)
    port map (
        din0 => mul_ln20_11_fu_1170_p0,
        din1 => mul_ln20_11_fu_1170_p1,
        dout => mul_ln20_11_fu_1170_p2);

    mul_8ns_10ns_17_1_1_U16 : component TOP_mul_8ns_10ns_17_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 10,
        dout_WIDTH => 17)
    port map (
        din0 => mul_ln20_5_fu_1302_p0,
        din1 => mul_ln20_5_fu_1302_p1,
        dout => mul_ln20_5_fu_1302_p2);

    mac_muladd_8s_9s_14s_16_4_1_U17 : component TOP_mac_muladd_8s_9s_14s_16_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 9,
        din2_WIDTH => 14,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => E_fu_165_p2,
        din1 => grp_fu_2535_p1,
        din2 => grp_fu_2535_p2,
        ce => grp_fu_2535_ce,
        dout => grp_fu_2535_p3);

    mac_muladd_8s_9s_14s_16_4_1_U18 : component TOP_mac_muladd_8s_9s_14s_16_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 9,
        din2_WIDTH => 14,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => E_1_fu_195_p2,
        din1 => grp_fu_2544_p1,
        din2 => grp_fu_2544_p2,
        ce => grp_fu_2544_ce,
        dout => grp_fu_2544_p3);

    mac_muladd_8s_9s_14s_16_4_1_U19 : component TOP_mac_muladd_8s_9s_14s_16_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 9,
        din2_WIDTH => 14,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => E_2_fu_289_p2,
        din1 => grp_fu_2553_p1,
        din2 => grp_fu_2553_p2,
        ce => grp_fu_2553_ce,
        dout => grp_fu_2553_p3);

    mac_muladd_8s_9s_14s_16_4_1_U20 : component TOP_mac_muladd_8s_9s_14s_16_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 9,
        din2_WIDTH => 14,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => E_3_fu_318_p2,
        din1 => grp_fu_2562_p1,
        din2 => grp_fu_2562_p2,
        ce => grp_fu_2562_ce,
        dout => grp_fu_2562_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                D_1_reg_2714 <= D_1_fu_382_p2;
                D_reg_2687 <= D_fu_340_p2;
                E_1_reg_2591 <= E_1_fu_195_p2;
                E_reg_2576 <= E_fu_165_p2;
                empty_80_reg_2704 <= empty_80_fu_364_p2;
                empty_81_reg_2731 <= empty_81_fu_406_p2;
                mul_ln20_1_reg_2698 <= mul_ln20_1_fu_358_p2;
                mul_ln20_2_reg_2709 <= mul_ln20_2_fu_373_p2;
                mul_ln20_3_reg_2720 <= mul_ln20_3_fu_394_p2;
                mul_ln20_4_reg_2725 <= mul_ln20_4_fu_400_p2;
                mul_ln20_reg_2693 <= mul_ln20_fu_352_p2;
                trunc_ln3_reg_2616 <= in_0_1_val(63 downto 56);
                u_1_reg_2586 <= in_0_1_val(23 downto 16);
                u_2_reg_2601 <= in_0_1_val(39 downto 32);
                u_2_reg_2601_pp0_iter1_reg <= u_2_reg_2601;
                u_3_reg_2611 <= in_0_1_val(55 downto 48);
                u_3_reg_2611_pp0_iter1_reg <= u_3_reg_2611;
                u_reg_2571 <= u_fu_151_p1;
                v_2_reg_2606 <= in_0_1_val(47 downto 40);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                D_2_reg_2757 <= D_2_fu_1095_p2;
                D_3_reg_2784 <= D_3_fu_1137_p2;
                E_2_reg_2652 <= E_2_fu_289_p2;
                E_3_reg_2672 <= E_3_fu_318_p2;
                add_ln20_4_reg_2742 <= add_ln20_4_fu_918_p2;
                empty_82_reg_2774 <= empty_82_fu_1119_p2;
                empty_83_reg_2801 <= empty_83_fu_1161_p2;
                empty_reg_2736 <= empty_fu_422_p2;
                mul_ln20_10_reg_2795 <= mul_ln20_10_fu_1155_p2;
                mul_ln20_11_reg_2806 <= mul_ln20_11_fu_1170_p2;
                mul_ln20_6_reg_2763 <= mul_ln20_6_fu_1107_p2;
                mul_ln20_7_reg_2768 <= mul_ln20_7_fu_1113_p2;
                mul_ln20_8_reg_2779 <= mul_ln20_8_fu_1128_p2;
                mul_ln20_9_reg_2790 <= mul_ln20_9_fu_1149_p2;
                out_offset_read_reg_2621 <= ap_port_reg_out_offset;
                p_cast9_reg_2747 <= p_cast9_fu_929_p1;
                sext_ln21_3_reg_2752 <= sext_ln21_3_fu_938_p1;
                tmp_10_reg_2647 <= ap_port_reg_in_0_0_val(39 downto 32);
                tmp_13_reg_2662 <= ap_port_reg_in_0_0_val(47 downto 40);
                tmp_14_reg_2667 <= ap_port_reg_in_0_0_val(55 downto 48);
                tmp_18_reg_2682 <= ap_port_reg_in_0_0_val(63 downto 56);
                tmp_1_reg_2642 <= ap_port_reg_in_0_0_val(31 downto 24);
                tmp_1_reg_2642_pp0_iter1_reg <= tmp_1_reg_2642;
                tmp_9_reg_2637 <= ap_port_reg_in_0_0_val(23 downto 16);
                y_1_reg_2632 <= ap_port_reg_in_0_0_val(15 downto 8);
                y_reg_2627 <= y_fu_245_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_port_reg_in_0_0_val <= in_0_0_val;
                ap_port_reg_out_offset <= out_offset;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0, ap_idle_pp0_1to2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to2 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    B_1_fu_1291_p3 <= 
        select_ln27_6_fu_1277_p3 when (or_ln27_2_fu_1285_p2(0) = '1') else 
        trunc_ln22_5_fu_1237_p4;
    B_2_fu_1495_p3 <= 
        select_ln27_8_fu_1481_p3 when (or_ln27_3_fu_1489_p2(0) = '1') else 
        trunc_ln22_7_fu_1353_p4;
    B_3_fu_2003_p3 <= 
        select_ln27_11_fu_1989_p3 when (or_ln27_5_fu_1997_p2(0) = '1') else 
        trunc_ln22_3_fu_1845_p4;
    B_4_fu_2480_p3 <= 
        select_ln27_14_fu_2466_p3 when (or_ln27_7_fu_2474_p2(0) = '1') else 
        trunc_ln22_s_fu_2338_p4;
    B_fu_659_p3 <= 
        select_ln27_1_fu_645_p3 when (or_ln27_fu_653_p2(0) = '1') else 
        trunc_ln22_1_fu_517_p4;
    D_1_fu_382_p2 <= (u_1_reg_2586 xor ap_const_lv8_80);
    D_2_fu_1095_p2 <= (u_2_reg_2601_pp0_iter1_reg xor ap_const_lv8_80);
    D_3_fu_1137_p2 <= (u_3_reg_2611_pp0_iter1_reg xor ap_const_lv8_80);
    D_fu_340_p2 <= (u_reg_2571 xor ap_const_lv8_80);
    E_1_fu_195_p2 <= (v_1_fu_185_p4 xor ap_const_lv8_80);
    E_2_fu_289_p2 <= (v_2_reg_2606 xor ap_const_lv8_80);
    E_3_fu_318_p2 <= (trunc_ln3_reg_2616 xor ap_const_lv8_80);
    E_fu_165_p2 <= (v_fu_155_p4 xor ap_const_lv8_80);
    G_1_fu_1693_p3 <= 
        select_ln26_9_fu_1679_p3 when (or_ln26_4_fu_1687_p2(0) = '1') else 
        trunc_ln21_9_fu_1565_p4;
    G_2_fu_1951_p3 <= 
        select_ln26_11_fu_1937_p3 when (or_ln26_5_fu_1945_p2(0) = '1') else 
        trunc_ln21_1_fu_1829_p4;
    G_3_fu_2428_p3 <= 
        select_ln26_14_fu_2414_p3 when (or_ln26_7_fu_2422_p2(0) = '1') else 
        trunc_ln21_s_fu_2322_p4;
    G_fu_1037_p3 <= 
        select_ln26_5_fu_1023_p3 when (or_ln26_2_fu_1031_p2(0) = '1') else 
        trunc_ln21_5_fu_947_p4;
    R_1_fu_783_p3 <= 
        select_ln25_6_fu_769_p3 when (or_ln25_1_fu_777_p2(0) = '1') else 
        trunc_ln20_3_fu_711_p4;
    R_2_fu_1407_p3 <= 
        select_ln25_9_fu_1393_p3 when (or_ln25_3_fu_1401_p2(0) = '1') else 
        trunc_ln20_8_fu_1327_p4;
    R_3_fu_1899_p3 <= 
        select_ln25_12_fu_1885_p3 when (or_ln25_5_fu_1893_p2(0) = '1') else 
        trunc_ln20_5_fu_1807_p4;
    R_fu_571_p3 <= 
        select_ln25_1_fu_557_p3 when (or_ln25_fu_565_p2(0) = '1') else 
        trunc_ln20_1_fu_451_p4;
    add_ln20_10_fu_1792_p2 <= std_logic_vector(unsigned(zext_ln20_6_fu_1789_p1) + unsigned(ap_const_lv18_3EDE0));
    add_ln20_11_fu_1802_p2 <= std_logic_vector(unsigned(mul_ln20_7_reg_2768) + unsigned(add_ln20_10_fu_1792_p2));
    add_ln20_12_fu_2035_p2 <= std_logic_vector(unsigned(zext_ln20_7_fu_2032_p1) + unsigned(ap_const_lv18_3EDE0));
    add_ln20_13_fu_2045_p2 <= std_logic_vector(unsigned(mul_ln20_10_reg_2795) + unsigned(add_ln20_12_fu_2035_p2));
    add_ln20_14_fu_2295_p2 <= std_logic_vector(unsigned(zext_ln20_8_fu_2292_p1) + unsigned(ap_const_lv18_3EDE0));
    add_ln20_15_fu_2305_p2 <= std_logic_vector(unsigned(mul_ln20_10_reg_2795) + unsigned(add_ln20_14_fu_2295_p2));
    add_ln20_1_fu_446_p2 <= std_logic_vector(unsigned(mul_ln20_1_reg_2698) + unsigned(add_ln20_fu_436_p2));
    add_ln20_2_fu_696_p2 <= std_logic_vector(unsigned(zext_ln20_2_fu_693_p1) + unsigned(ap_const_lv18_3EDE0));
    add_ln20_3_fu_706_p2 <= std_logic_vector(unsigned(mul_ln20_1_reg_2698) + unsigned(add_ln20_2_fu_696_p2));
    add_ln20_4_fu_918_p2 <= std_logic_vector(unsigned(zext_ln20_3_fu_915_p1) + unsigned(ap_const_lv18_3EDE0));
    add_ln20_5_fu_924_p2 <= std_logic_vector(unsigned(mul_ln20_4_reg_2725) + unsigned(add_ln20_4_fu_918_p2));
    add_ln20_6_fu_1312_p2 <= std_logic_vector(unsigned(zext_ln20_4_fu_1308_p1) + unsigned(ap_const_lv18_3EDE0));
    add_ln20_7_fu_1322_p2 <= std_logic_vector(unsigned(mul_ln20_4_reg_2725) + unsigned(add_ln20_6_fu_1312_p2));
    add_ln20_8_fu_1532_p2 <= std_logic_vector(unsigned(zext_ln20_5_fu_1529_p1) + unsigned(ap_const_lv18_3EDE0));
    add_ln20_9_fu_1542_p2 <= std_logic_vector(unsigned(mul_ln20_7_reg_2768) + unsigned(add_ln20_8_fu_1532_p2));
    add_ln20_fu_436_p2 <= std_logic_vector(unsigned(zext_ln20_fu_433_p1) + unsigned(ap_const_lv18_3EDE0));
    add_ln21_10_fu_1337_p2 <= std_logic_vector(unsigned(zext_ln20_4_fu_1308_p1) + unsigned(p_cast9_reg_2747));
    add_ln21_11_fu_1823_p2 <= std_logic_vector(signed(sext_ln21_5_fu_1556_p1) + signed(add_ln21_16_fu_1817_p2));
    add_ln21_12_fu_1550_p2 <= std_logic_vector(unsigned(zext_ln20_5_fu_1529_p1) + unsigned(p_cast18_fu_1547_p1));
    add_ln21_13_fu_2062_p2 <= std_logic_vector(signed(sext_ln21_7_fu_2059_p1) + signed(add_ln21_17_fu_2053_p2));
    add_ln21_15_fu_2316_p2 <= std_logic_vector(signed(sext_ln21_7_fu_2059_p1) + signed(add_ln21_19_fu_2310_p2));
    add_ln21_16_fu_1817_p2 <= std_logic_vector(unsigned(zext_ln20_6_fu_1789_p1) + unsigned(p_cast18_fu_1547_p1));
    add_ln21_17_fu_2053_p2 <= std_logic_vector(unsigned(zext_ln20_7_fu_2032_p1) + unsigned(p_cast26_fu_2050_p1));
    add_ln21_19_fu_2310_p2 <= std_logic_vector(unsigned(zext_ln20_8_fu_2292_p1) + unsigned(p_cast26_fu_2050_p1));
    add_ln21_1_fu_473_p2 <= std_logic_vector(signed(sext_ln21_1_fu_470_p1) + signed(add_ln21_fu_464_p2));
    add_ln21_3_fu_727_p2 <= std_logic_vector(signed(sext_ln21_1_fu_470_p1) + signed(add_ln21_4_fu_721_p2));
    add_ln21_4_fu_721_p2 <= std_logic_vector(unsigned(zext_ln20_2_fu_693_p1) + unsigned(p_cast_fu_461_p1));
    add_ln21_5_fu_941_p2 <= std_logic_vector(signed(sext_ln21_3_fu_938_p1) + signed(add_ln21_6_fu_932_p2));
    add_ln21_6_fu_932_p2 <= std_logic_vector(unsigned(zext_ln20_3_fu_915_p1) + unsigned(p_cast9_fu_929_p1));
    add_ln21_7_fu_1342_p2 <= std_logic_vector(signed(sext_ln21_3_reg_2752) + signed(add_ln21_10_fu_1337_p2));
    add_ln21_9_fu_1559_p2 <= std_logic_vector(signed(sext_ln21_5_fu_1556_p1) + signed(add_ln21_12_fu_1550_p2));
    add_ln21_fu_464_p2 <= std_logic_vector(unsigned(zext_ln20_fu_433_p1) + unsigned(p_cast_fu_461_p1));
    add_ln22_10_fu_1597_p2 <= std_logic_vector(signed(sext_ln22_6_fu_1582_p1) + signed(sext_ln22_7_fu_1593_p1));
    add_ln22_11_fu_2090_p2 <= std_logic_vector(signed(sext_ln22_9_fu_2075_p1) + signed(sext_ln22_10_fu_2086_p1));
    add_ln22_1_fu_733_p2 <= std_logic_vector(signed(sext_ln20_1_fu_702_p1) + signed(sext_ln22_2_fu_507_p1));
    add_ln22_2_fu_1231_p2 <= std_logic_vector(signed(sext_ln22_5_fu_1227_p1) + signed(sext_ln20_2_fu_1196_p1));
    add_ln22_3_fu_1347_p2 <= std_logic_vector(signed(sext_ln22_5_fu_1227_p1) + signed(sext_ln20_3_fu_1318_p1));
    add_ln22_4_fu_1607_p2 <= std_logic_vector(signed(sext_ln22_8_fu_1603_p1) + signed(sext_ln20_4_fu_1538_p1));
    add_ln22_5_fu_1839_p2 <= std_logic_vector(signed(sext_ln22_8_fu_1603_p1) + signed(sext_ln20_5_fu_1798_p1));
    add_ln22_6_fu_2100_p2 <= std_logic_vector(signed(sext_ln22_11_fu_2096_p1) + signed(sext_ln20_6_fu_2041_p1));
    add_ln22_7_fu_2332_p2 <= std_logic_vector(signed(sext_ln22_11_fu_2096_p1) + signed(sext_ln20_7_fu_2301_p1));
    add_ln22_8_fu_501_p2 <= std_logic_vector(signed(sext_ln22_fu_486_p1) + signed(sext_ln22_1_fu_497_p1));
    add_ln22_9_fu_1221_p2 <= std_logic_vector(signed(sext_ln22_3_fu_1206_p1) + signed(sext_ln22_4_fu_1217_p1));
    add_ln22_fu_511_p2 <= std_logic_vector(signed(sext_ln22_2_fu_507_p1) + signed(sext_ln20_fu_442_p1));
    add_ln67_fu_1176_p2 <= std_logic_vector(unsigned(empty_reg_2736) + unsigned(ap_const_lv4_1));
    add_ln68_fu_1186_p2 <= std_logic_vector(unsigned(empty_reg_2736) + unsigned(ap_const_lv4_2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage1_subdone <= (ap_const_logic_0 = ap_ce);
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_80_fu_364_p1 <= ap_const_lv16_FF9C(8 - 1 downto 0);
    empty_81_fu_406_p1 <= ap_const_lv16_FF9C(8 - 1 downto 0);
    empty_82_fu_1119_p1 <= ap_const_lv16_FF9C(8 - 1 downto 0);
    empty_83_fu_1161_p1 <= ap_const_lv16_FF9C(8 - 1 downto 0);
    empty_fu_422_p2 <= std_logic_vector(unsigned(tmp_fu_415_p3) - unsigned(out_offset_cast117_fu_412_p1));

    grp_fu_2535_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_ce, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))))) then 
            grp_fu_2535_ce <= ap_const_logic_1;
        else 
            grp_fu_2535_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2535_p1 <= ap_const_lv16_FF30(9 - 1 downto 0);
    grp_fu_2535_p2 <= ap_const_lv16_ED60(14 - 1 downto 0);

    grp_fu_2544_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_ce, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))))) then 
            grp_fu_2544_ce <= ap_const_logic_1;
        else 
            grp_fu_2544_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2544_p1 <= ap_const_lv16_FF30(9 - 1 downto 0);
    grp_fu_2544_p2 <= ap_const_lv16_ED60(14 - 1 downto 0);

    grp_fu_2553_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_ce, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))))) then 
            grp_fu_2553_ce <= ap_const_logic_1;
        else 
            grp_fu_2553_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2553_p1 <= ap_const_lv16_FF30(9 - 1 downto 0);
    grp_fu_2553_p2 <= ap_const_lv16_ED60(14 - 1 downto 0);

    grp_fu_2562_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_ce, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_ce) and (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))))) then 
            grp_fu_2562_ce <= ap_const_logic_1;
        else 
            grp_fu_2562_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2562_p1 <= ap_const_lv16_FF30(9 - 1 downto 0);
    grp_fu_2562_p2 <= ap_const_lv16_ED60(14 - 1 downto 0);
    icmp_ln25_1_fu_757_p2 <= "1" when (tmp_27_fu_747_p4 = ap_const_lv2_1) else "0";
    icmp_ln25_2_fu_975_p2 <= "1" when (tmp_33_fu_965_p4 = ap_const_lv2_1) else "0";
    icmp_ln25_3_fu_1381_p2 <= "1" when (tmp_39_fu_1371_p4 = ap_const_lv2_1) else "0";
    icmp_ln25_4_fu_1631_p2 <= "1" when (tmp_45_fu_1621_p4 = ap_const_lv2_1) else "0";
    icmp_ln25_5_fu_1873_p2 <= "1" when (tmp_51_fu_1863_p4 = ap_const_lv2_1) else "0";
    icmp_ln25_6_fu_2124_p2 <= "1" when (tmp_57_fu_2114_p4 = ap_const_lv2_1) else "0";
    icmp_ln25_7_fu_2366_p2 <= "1" when (tmp_63_fu_2356_p4 = ap_const_lv2_1) else "0";
    icmp_ln25_fu_545_p2 <= "1" when (tmp_4_fu_535_p4 = ap_const_lv2_1) else "0";
    icmp_ln26_1_fu_809_p2 <= "1" when (tmp_29_fu_799_p4 = ap_const_lv2_1) else "0";
    icmp_ln26_2_fu_1011_p2 <= "1" when (tmp_35_fu_1001_p4 = ap_const_lv2_1) else "0";
    icmp_ln26_3_fu_1433_p2 <= "1" when (tmp_41_fu_1423_p4 = ap_const_lv2_1) else "0";
    icmp_ln26_4_fu_1667_p2 <= "1" when (tmp_47_fu_1657_p4 = ap_const_lv2_1) else "0";
    icmp_ln26_5_fu_1925_p2 <= "1" when (tmp_53_fu_1915_p4 = ap_const_lv2_1) else "0";
    icmp_ln26_6_fu_2160_p2 <= "1" when (tmp_59_fu_2150_p4 = ap_const_lv2_1) else "0";
    icmp_ln26_7_fu_2402_p2 <= "1" when (tmp_65_fu_2392_p4 = ap_const_lv2_1) else "0";
    icmp_ln26_fu_597_p2 <= "1" when (tmp_23_fu_587_p4 = ap_const_lv2_1) else "0";
    icmp_ln27_1_fu_845_p2 <= "1" when (signed(tmp_31_fu_835_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln27_2_fu_1265_p2 <= "1" when (signed(tmp_37_fu_1255_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln27_3_fu_1469_p2 <= "1" when (signed(tmp_43_fu_1459_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln27_4_fu_1719_p2 <= "1" when (signed(tmp_49_fu_1709_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln27_5_fu_1977_p2 <= "1" when (signed(tmp_55_fu_1967_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln27_6_fu_2196_p2 <= "1" when (signed(tmp_61_fu_2186_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln27_7_fu_2454_p2 <= "1" when (signed(tmp_67_fu_2444_p4) > signed(ap_const_lv3_0)) else "0";
    icmp_ln27_fu_633_p2 <= "1" when (signed(tmp_25_fu_623_p4) > signed(ap_const_lv3_0)) else "0";
    mul_ln20_10_fu_1155_p1 <= ap_const_lv18_199(10 - 1 downto 0);
    mul_ln20_11_fu_1170_p0 <= mul_ln20_11_fu_1170_p00(8 - 1 downto 0);
    mul_ln20_11_fu_1170_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_reg_2682),17));
    mul_ln20_11_fu_1170_p1 <= ap_const_lv17_12A(10 - 1 downto 0);
    mul_ln20_1_fu_358_p1 <= ap_const_lv18_199(10 - 1 downto 0);
    mul_ln20_2_fu_373_p0 <= mul_ln20_2_fu_373_p00(8 - 1 downto 0);
    mul_ln20_2_fu_373_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_1_reg_2632),17));
    mul_ln20_2_fu_373_p1 <= ap_const_lv17_12A(10 - 1 downto 0);
    mul_ln20_3_fu_394_p0 <= mul_ln20_3_fu_394_p00(8 - 1 downto 0);
    mul_ln20_3_fu_394_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_2637),17));
    mul_ln20_3_fu_394_p1 <= ap_const_lv17_12A(10 - 1 downto 0);
    mul_ln20_4_fu_400_p1 <= ap_const_lv18_199(10 - 1 downto 0);
    mul_ln20_5_fu_1302_p0 <= mul_ln20_5_fu_1302_p00(8 - 1 downto 0);
    mul_ln20_5_fu_1302_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_reg_2642_pp0_iter1_reg),17));
    mul_ln20_5_fu_1302_p1 <= ap_const_lv17_12A(10 - 1 downto 0);
    mul_ln20_6_fu_1107_p0 <= mul_ln20_6_fu_1107_p00(8 - 1 downto 0);
    mul_ln20_6_fu_1107_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_10_reg_2647),17));
    mul_ln20_6_fu_1107_p1 <= ap_const_lv17_12A(10 - 1 downto 0);
    mul_ln20_7_fu_1113_p1 <= ap_const_lv18_199(10 - 1 downto 0);
    mul_ln20_8_fu_1128_p0 <= mul_ln20_8_fu_1128_p00(8 - 1 downto 0);
    mul_ln20_8_fu_1128_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_reg_2662),17));
    mul_ln20_8_fu_1128_p1 <= ap_const_lv17_12A(10 - 1 downto 0);
    mul_ln20_9_fu_1149_p0 <= mul_ln20_9_fu_1149_p00(8 - 1 downto 0);
    mul_ln20_9_fu_1149_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_reg_2667),17));
    mul_ln20_9_fu_1149_p1 <= ap_const_lv17_12A(10 - 1 downto 0);
    mul_ln20_fu_352_p0 <= mul_ln20_fu_352_p00(8 - 1 downto 0);
    mul_ln20_fu_352_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_reg_2627),17));
    mul_ln20_fu_352_p1 <= ap_const_lv17_12A(10 - 1 downto 0);
    or_ln25_1_fu_777_p2 <= (tmp_26_fu_739_p3 or icmp_ln25_1_fu_757_p2);
    or_ln25_2_fu_987_p2 <= (tmp_32_fu_957_p3 or icmp_ln25_2_fu_975_p2);
    or_ln25_3_fu_1401_p2 <= (tmp_38_fu_1363_p3 or icmp_ln25_3_fu_1381_p2);
    or_ln25_4_fu_1643_p2 <= (tmp_44_fu_1613_p3 or icmp_ln25_4_fu_1631_p2);
    or_ln25_5_fu_1893_p2 <= (tmp_50_fu_1855_p3 or icmp_ln25_5_fu_1873_p2);
    or_ln25_6_fu_2136_p2 <= (tmp_56_fu_2106_p3 or icmp_ln25_6_fu_2124_p2);
    or_ln25_7_fu_2378_p2 <= (tmp_62_fu_2348_p3 or icmp_ln25_7_fu_2366_p2);
    or_ln25_fu_565_p2 <= (tmp_3_fu_527_p3 or icmp_ln25_fu_545_p2);
    or_ln26_1_fu_821_p2 <= (tmp_28_fu_791_p3 or icmp_ln26_1_fu_809_p2);
    or_ln26_2_fu_1031_p2 <= (tmp_34_fu_993_p3 or icmp_ln26_2_fu_1011_p2);
    or_ln26_3_fu_1445_p2 <= (tmp_40_fu_1415_p3 or icmp_ln26_3_fu_1433_p2);
    or_ln26_4_fu_1687_p2 <= (tmp_46_fu_1649_p3 or icmp_ln26_4_fu_1667_p2);
    or_ln26_5_fu_1945_p2 <= (tmp_52_fu_1907_p3 or icmp_ln26_5_fu_1925_p2);
    or_ln26_6_fu_2172_p2 <= (tmp_58_fu_2142_p3 or icmp_ln26_6_fu_2160_p2);
    or_ln26_7_fu_2422_p2 <= (tmp_64_fu_2384_p3 or icmp_ln26_7_fu_2402_p2);
    or_ln26_fu_609_p2 <= (tmp_5_fu_579_p3 or icmp_ln26_fu_597_p2);
    or_ln27_1_fu_857_p2 <= (tmp_30_fu_827_p3 or icmp_ln27_1_fu_845_p2);
    or_ln27_2_fu_1285_p2 <= (tmp_36_fu_1247_p3 or icmp_ln27_2_fu_1265_p2);
    or_ln27_3_fu_1489_p2 <= (tmp_42_fu_1451_p3 or icmp_ln27_3_fu_1469_p2);
    or_ln27_4_fu_1731_p2 <= (tmp_48_fu_1701_p3 or icmp_ln27_4_fu_1719_p2);
    or_ln27_5_fu_1997_p2 <= (tmp_54_fu_1959_p3 or icmp_ln27_5_fu_1977_p2);
    or_ln27_6_fu_2208_p2 <= (tmp_60_fu_2178_p3 or icmp_ln27_6_fu_2196_p2);
    or_ln27_7_fu_2474_p2 <= (tmp_66_fu_2436_p3 or icmp_ln27_7_fu_2454_p2);
    or_ln27_fu_653_p2 <= (tmp_24_fu_615_p3 or icmp_ln27_fu_633_p2);
    or_ln39_1_fu_1071_p9 <= (((((((G_fu_1037_p3 & select_ln25_fu_1063_p3) & select_ln27_fu_907_p3) & select_ln26_1_fu_881_p3) & R_1_fu_783_p3) & B_fu_659_p3) & select_ln26_fu_685_p3) & R_fu_571_p3);
    or_ln51_1_fu_2514_p9 <= (((((((B_4_fu_2480_p3 & G_3_fu_2428_p3) & select_ln25_5_fu_2506_p3) & select_ln27_5_fu_2284_p3) & select_ln26_6_fu_2258_p3) & select_ln25_4_fu_2232_p3) & B_3_fu_2003_p3) & G_2_fu_1951_p3);
    out_offset_cast117_fu_412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_offset_read_reg_2621),4));

    out_r_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, p_cast118_fu_428_p1, ap_block_pp0_stage1, ap_block_pp0_stage0, zext_ln68_fu_1191_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_r_address0 <= zext_ln68_fu_1191_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_r_address0 <= p_cast118_fu_428_p1(4 - 1 downto 0);
        else 
            out_r_address0 <= "XXXX";
        end if; 
    end process;

    out_r_address1 <= zext_ln67_fu_1181_p1(4 - 1 downto 0);

    out_r_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_ce, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_r_ce0 <= ap_const_logic_1;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_r_ce1 <= ap_const_logic_1;
        else 
            out_r_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, or_ln39_1_fu_1071_p9, or_ln51_1_fu_2514_p9)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_r_d0 <= or_ln51_1_fu_2514_p9;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_r_d0 <= or_ln39_1_fu_1071_p9;
        else 
            out_r_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    out_r_d1 <= (((((((R_3_fu_1899_p3 & select_ln27_3_fu_1781_p3) & G_1_fu_1693_p3) & select_ln25_2_fu_1755_p3) & B_2_fu_1495_p3) & select_ln26_3_fu_1521_p3) & R_2_fu_1407_p3) & B_1_fu_1291_p3);

    out_r_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage1, ap_ce, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            out_r_we0 <= ap_const_logic_1;
        else 
            out_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            out_r_we1 <= ap_const_logic_1;
        else 
            out_r_we1 <= ap_const_logic_0;
        end if; 
    end process;

    p_cast118_fu_428_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_422_p2),64));
        p_cast18_fu_1547_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(empty_82_reg_2774),18));

        p_cast26_fu_2050_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(empty_83_reg_2801),18));

        p_cast9_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(empty_81_reg_2731),18));

        p_cast_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(empty_80_reg_2704),18));

    select_ln25_11_fu_1737_p3 <= 
        ap_const_lv8_FF when (xor_ln25_4_fu_1637_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln25_12_fu_1885_p3 <= 
        ap_const_lv8_FF when (xor_ln25_5_fu_1879_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln25_14_fu_2214_p3 <= 
        ap_const_lv8_FF when (xor_ln25_6_fu_2130_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln25_15_fu_2488_p3 <= 
        ap_const_lv8_FF when (xor_ln25_7_fu_2372_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln25_1_fu_557_p3 <= 
        ap_const_lv8_FF when (xor_ln25_fu_551_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln25_2_fu_1755_p3 <= 
        select_ln25_11_fu_1737_p3 when (or_ln25_4_fu_1643_p2(0) = '1') else 
        tmp_11_fu_1745_p4;
    select_ln25_4_fu_2232_p3 <= 
        select_ln25_14_fu_2214_p3 when (or_ln25_6_fu_2136_p2(0) = '1') else 
        tmp_15_fu_2222_p4;
    select_ln25_5_fu_2506_p3 <= 
        select_ln25_15_fu_2488_p3 when (or_ln25_7_fu_2378_p2(0) = '1') else 
        tmp_19_fu_2496_p4;
    select_ln25_6_fu_769_p3 <= 
        ap_const_lv8_FF when (xor_ln25_1_fu_763_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln25_8_fu_1045_p3 <= 
        ap_const_lv8_FF when (xor_ln25_2_fu_981_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln25_9_fu_1393_p3 <= 
        ap_const_lv8_FF when (xor_ln25_3_fu_1387_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln25_fu_1063_p3 <= 
        select_ln25_8_fu_1045_p3 when (or_ln25_2_fu_987_p2(0) = '1') else 
        tmp_s_fu_1053_p4;
    select_ln26_11_fu_1937_p3 <= 
        ap_const_lv8_FF when (xor_ln26_5_fu_1931_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln26_13_fu_2240_p3 <= 
        ap_const_lv8_FF when (xor_ln26_6_fu_2166_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln26_14_fu_2414_p3 <= 
        ap_const_lv8_FF when (xor_ln26_7_fu_2408_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln26_1_fu_881_p3 <= 
        select_ln26_4_fu_863_p3 when (or_ln26_1_fu_821_p2(0) = '1') else 
        tmp_7_fu_871_p4;
    select_ln26_2_fu_667_p3 <= 
        ap_const_lv8_FF when (xor_ln26_fu_603_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln26_3_fu_1521_p3 <= 
        select_ln26_8_fu_1503_p3 when (or_ln26_3_fu_1445_p2(0) = '1') else 
        tmp_2_fu_1511_p4;
    select_ln26_4_fu_863_p3 <= 
        ap_const_lv8_FF when (xor_ln26_1_fu_815_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln26_5_fu_1023_p3 <= 
        ap_const_lv8_FF when (xor_ln26_2_fu_1017_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln26_6_fu_2258_p3 <= 
        select_ln26_13_fu_2240_p3 when (or_ln26_6_fu_2172_p2(0) = '1') else 
        tmp_16_fu_2248_p4;
    select_ln26_8_fu_1503_p3 <= 
        ap_const_lv8_FF when (xor_ln26_3_fu_1439_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln26_9_fu_1679_p3 <= 
        ap_const_lv8_FF when (xor_ln26_4_fu_1673_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln26_fu_685_p3 <= 
        select_ln26_2_fu_667_p3 when (or_ln26_fu_609_p2(0) = '1') else 
        tmp_6_fu_675_p4;
    select_ln27_10_fu_1763_p3 <= 
        ap_const_lv8_FF when (xor_ln27_4_fu_1725_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln27_11_fu_1989_p3 <= 
        ap_const_lv8_FF when (xor_ln27_5_fu_1983_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln27_13_fu_2266_p3 <= 
        ap_const_lv8_FF when (xor_ln27_6_fu_2202_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln27_14_fu_2466_p3 <= 
        ap_const_lv8_FF when (xor_ln27_7_fu_2460_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln27_1_fu_645_p3 <= 
        ap_const_lv8_FF when (xor_ln27_fu_639_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln27_3_fu_1781_p3 <= 
        select_ln27_10_fu_1763_p3 when (or_ln27_4_fu_1731_p2(0) = '1') else 
        tmp_12_fu_1771_p4;
    select_ln27_4_fu_889_p3 <= 
        ap_const_lv8_FF when (xor_ln27_1_fu_851_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln27_5_fu_2284_p3 <= 
        select_ln27_13_fu_2266_p3 when (or_ln27_6_fu_2208_p2(0) = '1') else 
        tmp_17_fu_2274_p4;
    select_ln27_6_fu_1277_p3 <= 
        ap_const_lv8_FF when (xor_ln27_2_fu_1271_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln27_8_fu_1481_p3 <= 
        ap_const_lv8_FF when (xor_ln27_3_fu_1475_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln27_fu_907_p3 <= 
        select_ln27_4_fu_889_p3 when (or_ln27_1_fu_857_p2(0) = '1') else 
        tmp_8_fu_897_p4;
        sext_ln20_1_fu_702_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln20_2_fu_696_p2),19));

        sext_ln20_2_fu_1196_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln20_4_reg_2742),19));

        sext_ln20_3_fu_1318_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln20_6_fu_1312_p2),19));

        sext_ln20_4_fu_1538_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln20_8_fu_1532_p2),19));

        sext_ln20_5_fu_1798_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln20_10_fu_1792_p2),19));

        sext_ln20_6_fu_2041_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln20_12_fu_2035_p2),19));

        sext_ln20_7_fu_2301_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln20_14_fu_2295_p2),19));

        sext_ln20_fu_442_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln20_fu_436_p2),19));

        sext_ln21_1_fu_470_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_2535_p3),18));

        sext_ln21_3_fu_938_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_2544_p3),18));

        sext_ln21_5_fu_1556_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_2553_p3),18));

        sext_ln21_7_fu_2059_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_2562_p3),18));

        sext_ln22_10_fu_2086_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln22_7_fu_2079_p3),18));

        sext_ln22_11_fu_2096_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln22_11_fu_2090_p2),19));

        sext_ln22_1_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln22_1_fu_490_p3),18));

        sext_ln22_2_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln22_8_fu_501_p2),19));

        sext_ln22_3_fu_1206_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln22_2_fu_1199_p3),18));

        sext_ln22_4_fu_1217_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln22_3_fu_1210_p3),18));

        sext_ln22_5_fu_1227_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln22_9_fu_1221_p2),19));

        sext_ln22_6_fu_1582_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln22_4_fu_1575_p3),18));

        sext_ln22_7_fu_1593_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln22_5_fu_1586_p3),18));

        sext_ln22_8_fu_1603_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln22_10_fu_1597_p2),19));

        sext_ln22_9_fu_2075_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln22_6_fu_2068_p3),18));

        sext_ln22_fu_486_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_479_p3),18));

    shl_ln22_1_fu_490_p3 <= (D_reg_2687 & ap_const_lv2_0);
    shl_ln22_2_fu_1199_p3 <= (D_1_reg_2714 & ap_const_lv9_0);
    shl_ln22_3_fu_1210_p3 <= (D_1_reg_2714 & ap_const_lv2_0);
    shl_ln22_4_fu_1575_p3 <= (D_2_reg_2757 & ap_const_lv9_0);
    shl_ln22_5_fu_1586_p3 <= (D_2_reg_2757 & ap_const_lv2_0);
    shl_ln22_6_fu_2068_p3 <= (D_3_reg_2784 & ap_const_lv9_0);
    shl_ln22_7_fu_2079_p3 <= (D_3_reg_2784 & ap_const_lv2_0);
    shl_ln_fu_479_p3 <= (D_reg_2687 & ap_const_lv9_0);
    tmp_11_fu_1745_p4 <= add_ln20_9_fu_1542_p2(15 downto 8);
    tmp_12_fu_1771_p4 <= add_ln22_4_fu_1607_p2(15 downto 8);
    tmp_15_fu_2222_p4 <= add_ln20_13_fu_2045_p2(15 downto 8);
    tmp_16_fu_2248_p4 <= add_ln21_13_fu_2062_p2(15 downto 8);
    tmp_17_fu_2274_p4 <= add_ln22_6_fu_2100_p2(15 downto 8);
    tmp_19_fu_2496_p4 <= add_ln20_15_fu_2305_p2(15 downto 8);
    tmp_23_fu_587_p4 <= add_ln21_1_fu_473_p2(17 downto 16);
    tmp_24_fu_615_p3 <= add_ln22_fu_511_p2(18 downto 18);
    tmp_25_fu_623_p4 <= add_ln22_fu_511_p2(18 downto 16);
    tmp_26_fu_739_p3 <= add_ln20_3_fu_706_p2(17 downto 17);
    tmp_27_fu_747_p4 <= add_ln20_3_fu_706_p2(17 downto 16);
    tmp_28_fu_791_p3 <= add_ln21_3_fu_727_p2(17 downto 17);
    tmp_29_fu_799_p4 <= add_ln21_3_fu_727_p2(17 downto 16);
    tmp_2_fu_1511_p4 <= add_ln21_7_fu_1342_p2(15 downto 8);
    tmp_30_fu_827_p3 <= add_ln22_1_fu_733_p2(18 downto 18);
    tmp_31_fu_835_p4 <= add_ln22_1_fu_733_p2(18 downto 16);
    tmp_32_fu_957_p3 <= add_ln20_5_fu_924_p2(17 downto 17);
    tmp_33_fu_965_p4 <= add_ln20_5_fu_924_p2(17 downto 16);
    tmp_34_fu_993_p3 <= add_ln21_5_fu_941_p2(17 downto 17);
    tmp_35_fu_1001_p4 <= add_ln21_5_fu_941_p2(17 downto 16);
    tmp_36_fu_1247_p3 <= add_ln22_2_fu_1231_p2(18 downto 18);
    tmp_37_fu_1255_p4 <= add_ln22_2_fu_1231_p2(18 downto 16);
    tmp_38_fu_1363_p3 <= add_ln20_7_fu_1322_p2(17 downto 17);
    tmp_39_fu_1371_p4 <= add_ln20_7_fu_1322_p2(17 downto 16);
    tmp_3_fu_527_p3 <= add_ln20_1_fu_446_p2(17 downto 17);
    tmp_40_fu_1415_p3 <= add_ln21_7_fu_1342_p2(17 downto 17);
    tmp_41_fu_1423_p4 <= add_ln21_7_fu_1342_p2(17 downto 16);
    tmp_42_fu_1451_p3 <= add_ln22_3_fu_1347_p2(18 downto 18);
    tmp_43_fu_1459_p4 <= add_ln22_3_fu_1347_p2(18 downto 16);
    tmp_44_fu_1613_p3 <= add_ln20_9_fu_1542_p2(17 downto 17);
    tmp_45_fu_1621_p4 <= add_ln20_9_fu_1542_p2(17 downto 16);
    tmp_46_fu_1649_p3 <= add_ln21_9_fu_1559_p2(17 downto 17);
    tmp_47_fu_1657_p4 <= add_ln21_9_fu_1559_p2(17 downto 16);
    tmp_48_fu_1701_p3 <= add_ln22_4_fu_1607_p2(18 downto 18);
    tmp_49_fu_1709_p4 <= add_ln22_4_fu_1607_p2(18 downto 16);
    tmp_4_fu_535_p4 <= add_ln20_1_fu_446_p2(17 downto 16);
    tmp_50_fu_1855_p3 <= add_ln20_11_fu_1802_p2(17 downto 17);
    tmp_51_fu_1863_p4 <= add_ln20_11_fu_1802_p2(17 downto 16);
    tmp_52_fu_1907_p3 <= add_ln21_11_fu_1823_p2(17 downto 17);
    tmp_53_fu_1915_p4 <= add_ln21_11_fu_1823_p2(17 downto 16);
    tmp_54_fu_1959_p3 <= add_ln22_5_fu_1839_p2(18 downto 18);
    tmp_55_fu_1967_p4 <= add_ln22_5_fu_1839_p2(18 downto 16);
    tmp_56_fu_2106_p3 <= add_ln20_13_fu_2045_p2(17 downto 17);
    tmp_57_fu_2114_p4 <= add_ln20_13_fu_2045_p2(17 downto 16);
    tmp_58_fu_2142_p3 <= add_ln21_13_fu_2062_p2(17 downto 17);
    tmp_59_fu_2150_p4 <= add_ln21_13_fu_2062_p2(17 downto 16);
    tmp_5_fu_579_p3 <= add_ln21_1_fu_473_p2(17 downto 17);
    tmp_60_fu_2178_p3 <= add_ln22_6_fu_2100_p2(18 downto 18);
    tmp_61_fu_2186_p4 <= add_ln22_6_fu_2100_p2(18 downto 16);
    tmp_62_fu_2348_p3 <= add_ln20_15_fu_2305_p2(17 downto 17);
    tmp_63_fu_2356_p4 <= add_ln20_15_fu_2305_p2(17 downto 16);
    tmp_64_fu_2384_p3 <= add_ln21_15_fu_2316_p2(17 downto 17);
    tmp_65_fu_2392_p4 <= add_ln21_15_fu_2316_p2(17 downto 16);
    tmp_66_fu_2436_p3 <= add_ln22_7_fu_2332_p2(18 downto 18);
    tmp_67_fu_2444_p4 <= add_ln22_7_fu_2332_p2(18 downto 16);
    tmp_6_fu_675_p4 <= add_ln21_1_fu_473_p2(15 downto 8);
    tmp_7_fu_871_p4 <= add_ln21_3_fu_727_p2(15 downto 8);
    tmp_8_fu_897_p4 <= add_ln22_1_fu_733_p2(15 downto 8);
    tmp_fu_415_p3 <= (out_offset_read_reg_2621 & ap_const_lv2_0);
    tmp_s_fu_1053_p4 <= add_ln20_5_fu_924_p2(15 downto 8);
    trunc_ln20_1_fu_451_p4 <= add_ln20_1_fu_446_p2(15 downto 8);
    trunc_ln20_3_fu_711_p4 <= add_ln20_3_fu_706_p2(15 downto 8);
    trunc_ln20_5_fu_1807_p4 <= add_ln20_11_fu_1802_p2(15 downto 8);
    trunc_ln20_8_fu_1327_p4 <= add_ln20_7_fu_1322_p2(15 downto 8);
    trunc_ln21_1_fu_1829_p4 <= add_ln21_11_fu_1823_p2(15 downto 8);
    trunc_ln21_5_fu_947_p4 <= add_ln21_5_fu_941_p2(15 downto 8);
    trunc_ln21_9_fu_1565_p4 <= add_ln21_9_fu_1559_p2(15 downto 8);
    trunc_ln21_s_fu_2322_p4 <= add_ln21_15_fu_2316_p2(15 downto 8);
    trunc_ln22_1_fu_517_p4 <= add_ln22_fu_511_p2(15 downto 8);
    trunc_ln22_3_fu_1845_p4 <= add_ln22_5_fu_1839_p2(15 downto 8);
    trunc_ln22_5_fu_1237_p4 <= add_ln22_2_fu_1231_p2(15 downto 8);
    trunc_ln22_7_fu_1353_p4 <= add_ln22_3_fu_1347_p2(15 downto 8);
    trunc_ln22_s_fu_2338_p4 <= add_ln22_7_fu_2332_p2(15 downto 8);
    u_fu_151_p1 <= in_0_1_val(8 - 1 downto 0);
    v_1_fu_185_p4 <= in_0_1_val(31 downto 24);
    v_fu_155_p4 <= in_0_1_val(15 downto 8);
    xor_ln25_1_fu_763_p2 <= (tmp_26_fu_739_p3 xor ap_const_lv1_1);
    xor_ln25_2_fu_981_p2 <= (tmp_32_fu_957_p3 xor ap_const_lv1_1);
    xor_ln25_3_fu_1387_p2 <= (tmp_38_fu_1363_p3 xor ap_const_lv1_1);
    xor_ln25_4_fu_1637_p2 <= (tmp_44_fu_1613_p3 xor ap_const_lv1_1);
    xor_ln25_5_fu_1879_p2 <= (tmp_50_fu_1855_p3 xor ap_const_lv1_1);
    xor_ln25_6_fu_2130_p2 <= (tmp_56_fu_2106_p3 xor ap_const_lv1_1);
    xor_ln25_7_fu_2372_p2 <= (tmp_62_fu_2348_p3 xor ap_const_lv1_1);
    xor_ln25_fu_551_p2 <= (tmp_3_fu_527_p3 xor ap_const_lv1_1);
    xor_ln26_1_fu_815_p2 <= (tmp_28_fu_791_p3 xor ap_const_lv1_1);
    xor_ln26_2_fu_1017_p2 <= (tmp_34_fu_993_p3 xor ap_const_lv1_1);
    xor_ln26_3_fu_1439_p2 <= (tmp_40_fu_1415_p3 xor ap_const_lv1_1);
    xor_ln26_4_fu_1673_p2 <= (tmp_46_fu_1649_p3 xor ap_const_lv1_1);
    xor_ln26_5_fu_1931_p2 <= (tmp_52_fu_1907_p3 xor ap_const_lv1_1);
    xor_ln26_6_fu_2166_p2 <= (tmp_58_fu_2142_p3 xor ap_const_lv1_1);
    xor_ln26_7_fu_2408_p2 <= (tmp_64_fu_2384_p3 xor ap_const_lv1_1);
    xor_ln26_fu_603_p2 <= (tmp_5_fu_579_p3 xor ap_const_lv1_1);
    xor_ln27_1_fu_851_p2 <= (tmp_30_fu_827_p3 xor ap_const_lv1_1);
    xor_ln27_2_fu_1271_p2 <= (tmp_36_fu_1247_p3 xor ap_const_lv1_1);
    xor_ln27_3_fu_1475_p2 <= (tmp_42_fu_1451_p3 xor ap_const_lv1_1);
    xor_ln27_4_fu_1725_p2 <= (tmp_48_fu_1701_p3 xor ap_const_lv1_1);
    xor_ln27_5_fu_1983_p2 <= (tmp_54_fu_1959_p3 xor ap_const_lv1_1);
    xor_ln27_6_fu_2202_p2 <= (tmp_60_fu_2178_p3 xor ap_const_lv1_1);
    xor_ln27_7_fu_2460_p2 <= (tmp_66_fu_2436_p3 xor ap_const_lv1_1);
    xor_ln27_fu_639_p2 <= (tmp_24_fu_615_p3 xor ap_const_lv1_1);
    y_fu_245_p1 <= ap_port_reg_in_0_0_val(8 - 1 downto 0);
    zext_ln20_2_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln20_2_reg_2709),18));
    zext_ln20_3_fu_915_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln20_3_reg_2720),18));
    zext_ln20_4_fu_1308_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln20_5_fu_1302_p2),18));
    zext_ln20_5_fu_1529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln20_6_reg_2763),18));
    zext_ln20_6_fu_1789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln20_8_reg_2779),18));
    zext_ln20_7_fu_2032_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln20_9_reg_2790),18));
    zext_ln20_8_fu_2292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln20_11_reg_2806),18));
    zext_ln20_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln20_reg_2693),18));
    zext_ln67_fu_1181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln67_fu_1176_p2),64));
    zext_ln68_fu_1191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln68_fu_1186_p2),64));
end behav;
