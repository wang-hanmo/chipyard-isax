-- ==============================================================
-- Generated by Vitis HLS v2023.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity TOP is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    IN_r_TDATA : IN STD_LOGIC_VECTOR (191 downto 0);
    IN_r_TVALID : IN STD_LOGIC;
    IN_r_TREADY : OUT STD_LOGIC;
    OUT_r_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    OUT_r_TVALID : OUT STD_LOGIC;
    OUT_r_TREADY : IN STD_LOGIC );
end;


architecture behav of TOP is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "TOP_TOP,hls_ip_2023_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.589063,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=761,HLS_SYN_LUT=3197,HLS_VERSION=2023_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv7_7B : STD_LOGIC_VECTOR (6 downto 0) := "1111011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv7_2B : STD_LOGIC_VECTOR (6 downto 0) := "0101011";
    constant ap_const_lv7_5B : STD_LOGIC_VECTOR (6 downto 0) := "1011011";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv59_0 : STD_LOGIC_VECTOR (58 downto 0) := "00000000000000000000000000000000000000000000000000000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal regslice_both_OUT_r_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal icmp_ln88_reg_591 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage6 : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal IN_r_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal OUT_r_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal tmp_reg_558 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_reg_558_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_5_fu_306_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_reg_563 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_324_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_7_reg_574 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln26_fu_356_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln26_reg_581 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln26_reg_581_pp0_iter1_reg : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_9_fu_360_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_9_reg_585 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln88_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln88_reg_591_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state9_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal inreg_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state10_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal inreg_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal inreg_ce0 : STD_LOGIC;
    signal inreg_we0 : STD_LOGIC;
    signal inreg_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal inreg_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal inreg_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal inreg_ce1 : STD_LOGIC;
    signal inreg_we1 : STD_LOGIC;
    signal inreg_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal outreg_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal outreg_ce0 : STD_LOGIC;
    signal outreg_we0 : STD_LOGIC;
    signal outreg_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal outreg_ce1 : STD_LOGIC;
    signal outreg_we1 : STD_LOGIC;
    signal grp_Impl_yuv2rgb_fu_250_ap_start : STD_LOGIC;
    signal grp_Impl_yuv2rgb_fu_250_ap_done : STD_LOGIC;
    signal grp_Impl_yuv2rgb_fu_250_ap_idle : STD_LOGIC;
    signal grp_Impl_yuv2rgb_fu_250_ap_ready : STD_LOGIC;
    signal grp_Impl_yuv2rgb_fu_250_ap_ce : STD_LOGIC;
    signal grp_Impl_yuv2rgb_fu_250_out_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Impl_yuv2rgb_fu_250_out_r_ce0 : STD_LOGIC;
    signal grp_Impl_yuv2rgb_fu_250_out_r_we0 : STD_LOGIC;
    signal grp_Impl_yuv2rgb_fu_250_out_r_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Impl_yuv2rgb_fu_250_out_r_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Impl_yuv2rgb_fu_250_out_r_ce1 : STD_LOGIC;
    signal grp_Impl_yuv2rgb_fu_250_out_r_we1 : STD_LOGIC;
    signal grp_Impl_yuv2rgb_fu_250_out_r_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state10_pp0_stage2_iter1_ignore_call19 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_ignoreCallOp79 : BOOLEAN;
    signal ap_block_pp0_stage3_11001_ignoreCallOp80 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage4_11001_ignoreCallOp81 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage5_11001_ignoreCallOp82 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage6_11001_ignoreCallOp83 : BOOLEAN;
    signal ap_phi_mux_out_data_4_phi_fu_233_p10 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal grp_Impl_yuv2rgb_fu_250_ap_start_reg : STD_LOGIC := '0';
    signal ap_predicate_pred212_state3 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_predicate_pred212_state6 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_predicate_pred212_state7 : BOOLEAN;
    signal zext_ln78_2_fu_374_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln79_fu_385_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln74_1_fu_404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln75_fu_415_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln65_fu_434_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_fu_445_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln78_1_fu_456_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_cast_fu_465_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln81_fu_491_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_predicate_pred212_state8 : BOOLEAN;
    signal zext_ln73_fu_517_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_predicate_pred281_state8 : BOOLEAN;
    signal zext_ln70_1_fu_543_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_predicate_pred275_state8 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal tmp_1_fu_316_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_296_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_332_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal index1_fu_342_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln78_fu_368_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal index2_fu_350_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln79_fu_379_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_390_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln74_fu_398_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln75_fu_409_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_6_fu_420_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln65_fu_428_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln66_fu_439_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal in_inst_fu_260_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_460_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_10_fu_473_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln78_fu_470_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln81_fu_480_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln81_fu_486_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_8_fu_499_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln74_fu_496_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln73_fu_506_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln73_fu_512_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_525_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln70_fu_522_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln70_fu_532_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln70_fu_538_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_condition_exit_pp0_iter1_stage2 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_loop_init : STD_LOGIC;
    signal regslice_both_IN_r_V_data_V_U_apdone_blk : STD_LOGIC;
    signal IN_r_TDATA_int_regslice : STD_LOGIC_VECTOR (191 downto 0);
    signal IN_r_TVALID_int_regslice : STD_LOGIC;
    signal IN_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_IN_r_V_data_V_U_ack_in : STD_LOGIC;
    signal OUT_r_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal OUT_r_TVALID_int_regslice : STD_LOGIC;
    signal OUT_r_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_OUT_r_V_data_V_U_vld_out : STD_LOGIC;
    signal ap_condition_684 : BOOLEAN;
    signal ap_condition_687 : BOOLEAN;
    signal ap_condition_690 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component TOP_Impl_yuv2rgb IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        in_0_0_val : IN STD_LOGIC_VECTOR (63 downto 0);
        in_0_1_val : IN STD_LOGIC_VECTOR (63 downto 0);
        out_r_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_r_ce0 : OUT STD_LOGIC;
        out_r_we0 : OUT STD_LOGIC;
        out_r_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_r_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_r_ce1 : OUT STD_LOGIC;
        out_r_we1 : OUT STD_LOGIC;
        out_r_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        out_offset : IN STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component TOP_inreg_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component TOP_outreg_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component TOP_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component TOP_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    inreg_U : component TOP_inreg_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => inreg_address0,
        ce0 => inreg_ce0,
        we0 => inreg_we0,
        d0 => inreg_d0,
        q0 => inreg_q0,
        address1 => inreg_address1,
        ce1 => inreg_ce1,
        we1 => inreg_we1,
        d1 => inreg_d1,
        q1 => inreg_q1);

    outreg_U : component TOP_outreg_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 12,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => outreg_address0,
        ce0 => outreg_ce0,
        we0 => outreg_we0,
        d0 => grp_Impl_yuv2rgb_fu_250_out_r_d0,
        q0 => outreg_q0,
        address1 => grp_Impl_yuv2rgb_fu_250_out_r_address1,
        ce1 => outreg_ce1,
        we1 => outreg_we1,
        d1 => grp_Impl_yuv2rgb_fu_250_out_r_d1);

    grp_Impl_yuv2rgb_fu_250 : component TOP_Impl_yuv2rgb
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_Impl_yuv2rgb_fu_250_ap_start,
        ap_done => grp_Impl_yuv2rgb_fu_250_ap_done,
        ap_idle => grp_Impl_yuv2rgb_fu_250_ap_idle,
        ap_ready => grp_Impl_yuv2rgb_fu_250_ap_ready,
        ap_ce => grp_Impl_yuv2rgb_fu_250_ap_ce,
        in_0_0_val => inreg_q1,
        in_0_1_val => inreg_q0,
        out_r_address0 => grp_Impl_yuv2rgb_fu_250_out_r_address0,
        out_r_ce0 => grp_Impl_yuv2rgb_fu_250_out_r_ce0,
        out_r_we0 => grp_Impl_yuv2rgb_fu_250_out_r_we0,
        out_r_d0 => grp_Impl_yuv2rgb_fu_250_out_r_d0,
        out_r_address1 => grp_Impl_yuv2rgb_fu_250_out_r_address1,
        out_r_ce1 => grp_Impl_yuv2rgb_fu_250_out_r_ce1,
        out_r_we1 => grp_Impl_yuv2rgb_fu_250_out_r_we1,
        out_r_d1 => grp_Impl_yuv2rgb_fu_250_out_r_d1,
        out_offset => tmp_5_reg_563);

    flow_control_loop_pipe_U : component TOP_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage6,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_const_logic_1);

    regslice_both_IN_r_V_data_V_U : component TOP_regslice_both
    generic map (
        DataWidth => 192)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => IN_r_TDATA,
        vld_in => IN_r_TVALID,
        ack_in => regslice_both_IN_r_V_data_V_U_ack_in,
        data_out => IN_r_TDATA_int_regslice,
        vld_out => IN_r_TVALID_int_regslice,
        ack_out => IN_r_TREADY_int_regslice,
        apdone_blk => regslice_both_IN_r_V_data_V_U_apdone_blk);

    regslice_both_OUT_r_V_data_V_U : component TOP_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => OUT_r_TDATA_int_regslice,
        vld_in => OUT_r_TVALID_int_regslice,
        ack_in => OUT_r_TREADY_int_regslice,
        data_out => OUT_r_TDATA,
        vld_out => regslice_both_OUT_r_V_data_V_U_vld_out,
        ack_out => OUT_r_TREADY,
        apdone_blk => regslice_both_OUT_r_V_data_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    grp_Impl_yuv2rgb_fu_250_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_Impl_yuv2rgb_fu_250_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (trunc_ln26_reg_581 = ap_const_lv7_7B))) then 
                    grp_Impl_yuv2rgb_fu_250_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Impl_yuv2rgb_fu_250_ap_ready = ap_const_logic_1)) then 
                    grp_Impl_yuv2rgb_fu_250_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                    ap_predicate_pred212_state3 <= (trunc_ln26_reg_581 = ap_const_lv7_7B);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                    ap_predicate_pred212_state6 <= (trunc_ln26_reg_581 = ap_const_lv7_7B);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                    ap_predicate_pred212_state7 <= (trunc_ln26_reg_581 = ap_const_lv7_7B);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                    ap_predicate_pred212_state8 <= (trunc_ln26_reg_581 = ap_const_lv7_7B);
                    ap_predicate_pred275_state8 <= (trunc_ln26_reg_581 = ap_const_lv7_2B);
                    ap_predicate_pred281_state8 <= (trunc_ln26_reg_581 = ap_const_lv7_5B);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln88_reg_591 <= icmp_ln88_fu_450_p2;
                icmp_ln88_reg_591_pp0_iter1_reg <= icmp_ln88_reg_591;
                tmp_5_reg_563 <= IN_r_TDATA_int_regslice(31 downto 30);
                tmp_7_reg_574 <= tmp_7_fu_324_p3;
                    tmp_9_reg_585(2 downto 1) <= tmp_9_fu_360_p3(2 downto 1);
                tmp_reg_558 <= IN_r_TDATA_int_regslice(11 downto 7);
                tmp_reg_558_pp0_iter1_reg <= tmp_reg_558;
                trunc_ln26_reg_581 <= trunc_ln26_fu_356_p1;
                trunc_ln26_reg_581_pp0_iter1_reg <= trunc_ln26_reg_581;
            end if;
        end if;
    end process;
    tmp_9_reg_585(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage6_subdone, ap_block_pp0_stage2_subdone, ap_condition_exit_pp0_iter1_stage2, ap_idle_pp0_0to0, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_done_pending_pp0, ap_block_pp0_stage1_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;

    IN_r_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, IN_r_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            IN_r_TDATA_blk_n <= IN_r_TVALID_int_regslice;
        else 
            IN_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    IN_r_TREADY <= regslice_both_IN_r_V_data_V_U_ack_in;

    IN_r_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            IN_r_TREADY_int_regslice <= ap_const_logic_1;
        else 
            IN_r_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    OUT_r_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, OUT_r_TREADY_int_regslice)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            OUT_r_TDATA_blk_n <= OUT_r_TREADY_int_regslice;
        else 
            OUT_r_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    OUT_r_TDATA_int_regslice <= ((ap_phi_mux_out_data_4_phi_fu_233_p10 & ap_const_lv59_0) & tmp_reg_558_pp0_iter1_reg);
    OUT_r_TVALID <= regslice_both_OUT_r_V_data_V_U_vld_out;

    OUT_r_TVALID_int_regslice_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            OUT_r_TVALID_int_regslice <= ap_const_logic_1;
        else 
            OUT_r_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    add_ln65_fu_428_p2 <= std_logic_vector(unsigned(tmp_6_fu_420_p3) + unsigned(index1_fu_342_p3));
    add_ln66_fu_439_p2 <= std_logic_vector(unsigned(tmp_6_fu_420_p3) + unsigned(index2_fu_350_p2));
    add_ln70_fu_538_p2 <= std_logic_vector(unsigned(sub_ln70_fu_532_p2) + unsigned(tmp_7_reg_574));
    add_ln73_fu_512_p2 <= std_logic_vector(unsigned(sub_ln73_fu_506_p2) + unsigned(tmp_7_reg_574));
    add_ln74_fu_398_p2 <= std_logic_vector(unsigned(tmp_4_fu_390_p3) + unsigned(index1_fu_342_p3));
    add_ln75_fu_409_p2 <= std_logic_vector(unsigned(tmp_4_fu_390_p3) + unsigned(index2_fu_350_p2));
    add_ln78_fu_368_p2 <= std_logic_vector(unsigned(tmp_9_fu_360_p3) + unsigned(index1_fu_342_p3));
    add_ln79_fu_379_p2 <= std_logic_vector(unsigned(tmp_9_fu_360_p3) + unsigned(index2_fu_350_p2));
    add_ln81_fu_486_p2 <= std_logic_vector(unsigned(sub_ln81_fu_480_p2) + unsigned(tmp_7_reg_574));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter0, regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg, ap_block_state1_pp0_stage0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) or ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg, ap_block_state1_pp0_stage0_iter0)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) or ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter1, regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg, ap_block_state9_pp0_stage1_iter1)
    begin
                ap_block_pp0_stage1_01001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state9_pp0_stage1_iter1)) or ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter1, regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg, ap_block_state9_pp0_stage1_iter1, OUT_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_logic_0 = OUT_r_TREADY_int_regslice) or (ap_const_boolean_1 = ap_block_state9_pp0_stage1_iter1))) or ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg, ap_block_state9_pp0_stage1_iter1, OUT_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_logic_0 = OUT_r_TREADY_int_regslice) or (ap_const_boolean_1 = ap_block_state9_pp0_stage1_iter1))) or ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter1, regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg, ap_block_state10_pp0_stage2_iter1, OUT_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage2_11001 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_logic_0 = OUT_r_TREADY_int_regslice) or (ap_const_boolean_1 = ap_block_state10_pp0_stage2_iter1))) or ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage2_11001_ignoreCallOp79_assign_proc : process(ap_enable_reg_pp0_iter1, regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg, ap_block_state10_pp0_stage2_iter1_ignore_call19, OUT_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage2_11001_ignoreCallOp79 <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_logic_0 = OUT_r_TREADY_int_regslice) or (ap_const_boolean_1 = ap_block_state10_pp0_stage2_iter1_ignore_call19))) or ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg, ap_block_state10_pp0_stage2_iter1, OUT_r_TREADY_int_regslice)
    begin
                ap_block_pp0_stage2_subdone <= (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_logic_0 = OUT_r_TREADY_int_regslice) or (ap_const_boolean_1 = ap_block_state10_pp0_stage2_iter1))) or ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_11001_ignoreCallOp80_assign_proc : process(regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg)
    begin
                ap_block_pp0_stage3_11001_ignoreCallOp80 <= ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg)
    begin
                ap_block_pp0_stage4_11001 <= ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_block_pp0_stage4_11001_ignoreCallOp81_assign_proc : process(regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg)
    begin
                ap_block_pp0_stage4_11001_ignoreCallOp81 <= ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_11001_assign_proc : process(regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg)
    begin
                ap_block_pp0_stage5_11001 <= ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_block_pp0_stage5_11001_ignoreCallOp82_assign_proc : process(regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg)
    begin
                ap_block_pp0_stage5_11001_ignoreCallOp82 <= ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg)
    begin
                ap_block_pp0_stage5_subdone <= ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_11001_assign_proc : process(regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg)
    begin
                ap_block_pp0_stage6_11001 <= ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_block_pp0_stage6_11001_ignoreCallOp83_assign_proc : process(regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg)
    begin
                ap_block_pp0_stage6_11001_ignoreCallOp83 <= ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(regslice_both_OUT_r_V_data_V_U_apdone_blk, ap_loop_exit_ready_pp0_iter1_reg)
    begin
                ap_block_pp0_stage6_subdone <= ((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_block_state10_pp0_stage2_iter1_assign_proc : process(regslice_both_OUT_r_V_data_V_U_apdone_blk, OUT_r_TREADY_int_regslice)
    begin
                ap_block_state10_pp0_stage2_iter1 <= ((regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1) or (ap_const_logic_0 = OUT_r_TREADY_int_regslice));
    end process;


    ap_block_state10_pp0_stage2_iter1_ignore_call19_assign_proc : process(regslice_both_OUT_r_V_data_V_U_apdone_blk, OUT_r_TREADY_int_regslice)
    begin
                ap_block_state10_pp0_stage2_iter1_ignore_call19 <= ((regslice_both_OUT_r_V_data_V_U_apdone_blk = ap_const_logic_1) or (ap_const_logic_0 = OUT_r_TREADY_int_regslice));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(IN_r_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_const_logic_0 = IN_r_TVALID_int_regslice);
    end process;


    ap_block_state9_pp0_stage1_iter1_assign_proc : process(OUT_r_TREADY_int_regslice)
    begin
                ap_block_state9_pp0_stage1_iter1 <= (ap_const_logic_0 = OUT_r_TREADY_int_regslice);
    end process;


    ap_condition_684_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, trunc_ln26_fu_356_p1)
    begin
                ap_condition_684 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln26_fu_356_p1 = ap_const_lv7_7B));
    end process;


    ap_condition_687_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, trunc_ln26_fu_356_p1)
    begin
                ap_condition_687 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln26_fu_356_p1 = ap_const_lv7_5B));
    end process;


    ap_condition_690_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, trunc_ln26_fu_356_p1)
    begin
                ap_condition_690 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln26_fu_356_p1 = ap_const_lv7_B));
    end process;


    ap_condition_exit_pp0_iter0_stage6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_subdone, icmp_ln88_reg_591)
    begin
        if (((icmp_ln88_reg_591 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            ap_condition_exit_pp0_iter0_stage6 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage2_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, icmp_ln88_reg_591_pp0_iter1_reg, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln88_reg_591_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter1_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_loop_exit_ready_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (not(((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0) and (ap_loop_exit_ready = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage6;

    ap_phi_mux_out_data_4_phi_fu_233_p10_assign_proc : process(trunc_ln26_reg_581_pp0_iter1_reg, outreg_q0)
    begin
        if (((trunc_ln26_reg_581_pp0_iter1_reg = ap_const_lv7_5B) or (trunc_ln26_reg_581_pp0_iter1_reg = ap_const_lv7_2B) or (trunc_ln26_reg_581_pp0_iter1_reg = ap_const_lv7_7B))) then 
            ap_phi_mux_out_data_4_phi_fu_233_p10 <= outreg_q0;
        else 
            ap_phi_mux_out_data_4_phi_fu_233_p10 <= ap_const_lv64_0;
        end if; 
    end process;


    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    grp_Impl_yuv2rgb_fu_250_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001_ignoreCallOp79, ap_block_pp0_stage3_11001_ignoreCallOp80, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage4_11001_ignoreCallOp81, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage5_11001_ignoreCallOp82, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage6_11001_ignoreCallOp83)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001_ignoreCallOp83) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001_ignoreCallOp82) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001_ignoreCallOp81) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001_ignoreCallOp80) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001_ignoreCallOp79) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_Impl_yuv2rgb_fu_250_ap_ce <= ap_const_logic_1;
        else 
            grp_Impl_yuv2rgb_fu_250_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_Impl_yuv2rgb_fu_250_ap_start <= grp_Impl_yuv2rgb_fu_250_ap_start_reg;
    icmp_ln88_fu_450_p2 <= "1" when (in_inst_fu_260_p1 = ap_const_lv64_0) else "0";
    in_inst_fu_260_p1 <= IN_r_TDATA_int_regslice(64 - 1 downto 0);
    index1_fu_342_p3 <= (tmp_2_fu_332_p4 & ap_const_lv1_0);
    index2_fu_350_p2 <= (index1_fu_342_p3 or ap_const_lv3_1);

    inreg_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln79_fu_385_p1, zext_ln75_fu_415_p1, zext_ln66_fu_445_p1, tmp_17_cast_fu_465_p1, ap_condition_684, ap_condition_687, ap_condition_690)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inreg_address0 <= tmp_17_cast_fu_465_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_690)) then 
                inreg_address0 <= zext_ln66_fu_445_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_687)) then 
                inreg_address0 <= zext_ln75_fu_415_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_684)) then 
                inreg_address0 <= zext_ln79_fu_385_p1(3 - 1 downto 0);
            else 
                inreg_address0 <= "XXX";
            end if;
        else 
            inreg_address0 <= "XXX";
        end if; 
    end process;


    inreg_address1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, zext_ln78_2_fu_374_p1, zext_ln74_1_fu_404_p1, zext_ln65_fu_434_p1, zext_ln78_1_fu_456_p1, ap_condition_684, ap_condition_687, ap_condition_690)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inreg_address1 <= zext_ln78_1_fu_456_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_690)) then 
                inreg_address1 <= zext_ln65_fu_434_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_687)) then 
                inreg_address1 <= zext_ln74_1_fu_404_p1(3 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_684)) then 
                inreg_address1 <= zext_ln78_2_fu_374_p1(3 - 1 downto 0);
            else 
                inreg_address1 <= "XXX";
            end if;
        else 
            inreg_address1 <= "XXX";
        end if; 
    end process;


    inreg_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, trunc_ln26_fu_356_p1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln26_fu_356_p1 = ap_const_lv7_5B)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln26_fu_356_p1 = ap_const_lv7_7B)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln26_fu_356_p1 = ap_const_lv7_B)))) then 
            inreg_ce0 <= ap_const_logic_1;
        else 
            inreg_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    inreg_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, trunc_ln26_fu_356_p1, ap_block_pp0_stage1_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln26_fu_356_p1 = ap_const_lv7_5B)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln26_fu_356_p1 = ap_const_lv7_7B)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln26_fu_356_p1 = ap_const_lv7_B)))) then 
            inreg_ce1 <= ap_const_logic_1;
        else 
            inreg_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    inreg_d0 <= IN_r_TDATA_int_regslice(191 downto 128);
    inreg_d1 <= IN_r_TDATA_int_regslice(127 downto 64);

    inreg_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, trunc_ln26_fu_356_p1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln26_fu_356_p1 = ap_const_lv7_5B)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln26_fu_356_p1 = ap_const_lv7_7B)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln26_fu_356_p1 = ap_const_lv7_B)))) then 
            inreg_we0 <= ap_const_logic_1;
        else 
            inreg_we0 <= ap_const_logic_0;
        end if; 
    end process;


    inreg_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, trunc_ln26_fu_356_p1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln26_fu_356_p1 = ap_const_lv7_5B)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln26_fu_356_p1 = ap_const_lv7_7B)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln26_fu_356_p1 = ap_const_lv7_B)))) then 
            inreg_we1 <= ap_const_logic_1;
        else 
            inreg_we1 <= ap_const_logic_0;
        end if; 
    end process;


    outreg_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage0, grp_Impl_yuv2rgb_fu_250_out_r_address0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_predicate_pred212_state6, ap_block_pp0_stage6, ap_predicate_pred212_state7, zext_ln81_fu_491_p1, ap_predicate_pred212_state8, zext_ln73_fu_517_p1, ap_predicate_pred281_state8, zext_ln70_1_fu_543_p1, ap_predicate_pred275_state8)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_pred275_state8 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            outreg_address0 <= zext_ln70_1_fu_543_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_pred281_state8 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            outreg_address0 <= zext_ln73_fu_517_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_pred212_state8 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            outreg_address0 <= zext_ln81_fu_491_p1(4 - 1 downto 0);
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_predicate_pred212_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_predicate_pred212_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            outreg_address0 <= grp_Impl_yuv2rgb_fu_250_out_r_address0;
        else 
            outreg_address0 <= "XXXX";
        end if; 
    end process;


    outreg_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage0_11001, grp_Impl_yuv2rgb_fu_250_out_r_ce0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_predicate_pred212_state6, ap_block_pp0_stage6, ap_predicate_pred212_state7, ap_predicate_pred212_state8, ap_predicate_pred281_state8, ap_predicate_pred275_state8)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred275_state8 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred281_state8 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_pred212_state8 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            outreg_ce0 <= ap_const_logic_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_predicate_pred212_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_predicate_pred212_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            outreg_ce0 <= grp_Impl_yuv2rgb_fu_250_out_r_ce0;
        else 
            outreg_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    outreg_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, grp_Impl_yuv2rgb_fu_250_out_r_ce1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_predicate_pred212_state6, ap_block_pp0_stage6, ap_predicate_pred212_state7)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_predicate_pred212_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_predicate_pred212_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            outreg_ce1 <= grp_Impl_yuv2rgb_fu_250_out_r_ce1;
        else 
            outreg_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    outreg_we0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, grp_Impl_yuv2rgb_fu_250_out_r_we0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_predicate_pred212_state6, ap_block_pp0_stage6, ap_predicate_pred212_state7)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_predicate_pred212_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_predicate_pred212_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            outreg_we0 <= grp_Impl_yuv2rgb_fu_250_out_r_we0;
        else 
            outreg_we0 <= ap_const_logic_0;
        end if; 
    end process;


    outreg_we1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, grp_Impl_yuv2rgb_fu_250_out_r_we1, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_predicate_pred212_state6, ap_block_pp0_stage6, ap_predicate_pred212_state7)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_predicate_pred212_state7 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_predicate_pred212_state6 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            outreg_we1 <= grp_Impl_yuv2rgb_fu_250_out_r_we1;
        else 
            outreg_we1 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln70_fu_532_p2 <= std_logic_vector(unsigned(tmp_s_fu_525_p3) - unsigned(zext_ln70_fu_522_p1));
    sub_ln73_fu_506_p2 <= std_logic_vector(unsigned(tmp_8_fu_499_p3) - unsigned(zext_ln74_fu_496_p1));
    sub_ln81_fu_480_p2 <= std_logic_vector(unsigned(tmp_10_fu_473_p3) - unsigned(zext_ln78_fu_470_p1));
    tmp_10_fu_473_p3 <= (tmp_5_reg_563 & ap_const_lv2_0);
    tmp_17_cast_fu_465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_460_p2),64));
    tmp_17_fu_460_p2 <= (tmp_9_reg_585 or ap_const_lv3_1);
    tmp_1_fu_316_p3 <= IN_r_TDATA_int_regslice(25 downto 25);
    tmp_2_fu_332_p4 <= IN_r_TDATA_int_regslice(27 downto 26);
    tmp_3_fu_296_p4 <= IN_r_TDATA_int_regslice(14 downto 12);
    tmp_4_fu_390_p3 <= (tmp_5_fu_306_p4 & ap_const_lv1_0);
    tmp_5_fu_306_p4 <= IN_r_TDATA_int_regslice(31 downto 30);
    tmp_6_fu_420_p3 <= (tmp_5_fu_306_p4 & ap_const_lv1_0);
    tmp_7_fu_324_p3 <= (tmp_1_fu_316_p3 & tmp_3_fu_296_p4);
    tmp_8_fu_499_p3 <= (tmp_5_reg_563 & ap_const_lv2_0);
    tmp_9_fu_360_p3 <= (tmp_5_fu_306_p4 & ap_const_lv1_0);
    tmp_s_fu_525_p3 <= (tmp_5_reg_563 & ap_const_lv2_0);
    trunc_ln26_fu_356_p1 <= IN_r_TDATA_int_regslice(7 - 1 downto 0);
    zext_ln65_fu_434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln65_fu_428_p2),64));
    zext_ln66_fu_445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln66_fu_439_p2),64));
    zext_ln70_1_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln70_fu_538_p2),64));
    zext_ln70_fu_522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_563),4));
    zext_ln73_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln73_fu_512_p2),64));
    zext_ln74_1_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln74_fu_398_p2),64));
    zext_ln74_fu_496_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_563),4));
    zext_ln75_fu_415_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln75_fu_409_p2),64));
    zext_ln78_1_fu_456_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_reg_585),64));
    zext_ln78_2_fu_374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln78_fu_368_p2),64));
    zext_ln78_fu_470_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_563),4));
    zext_ln79_fu_385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln79_fu_379_p2),64));
    zext_ln81_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln81_fu_486_p2),64));
end behav;
